<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Treball de Fi de Grau: Referència de la Classe Photon.Realtime.SupportLogger</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Treball de Fi de Grau
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">Documentació pel treball de final de grau. Implementació d&#39;una base per un joc de gènere MOBA multijugador en línia.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generat per Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Cerca','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Cerca');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_photon_1_1_realtime_1_1_support_logger.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Mètodes públics</a> &#124;
<a href="#pub-attribs">Atributs Públics</a> &#124;
<a href="#properties">Propietats</a> &#124;
<a href="#pri-methods">Mètodes Privats</a> &#124;
<a href="#pri-attribs">Atributs Privats</a> &#124;
<a href="class_photon_1_1_realtime_1_1_support_logger-members.xhtml">Llista de tots els membres</a>  </div>
  <div class="headertitle">
<div class="title">Referència de la Classe Photon.Realtime.SupportLogger</div>  </div>
</div><!--header-->
<div class="contents">

<p>Helper class to debug log basic information about <a class="el" href="namespace_photon.xhtml">Photon</a> client and vital traffic statistics.  
 <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#details">Més...</a></p>
<div class="dynheader">
Diagrama d'Herència per a Photon.Realtime.SupportLogger:</div>
<div class="dyncontent">
 <div class="center">
  <img src="class_photon_1_1_realtime_1_1_support_logger.png" usemap="#Photon.Realtime.SupportLogger_map" alt=""/>
  <map id="Photon.Realtime.SupportLogger_map" name="Photon.Realtime.SupportLogger_map">
<area href="interface_photon_1_1_realtime_1_1_i_connection_callbacks.xhtml" title="Collection of &quot;organizational&quot; callbacks for the Realtime Api to cover: Connection and Regions." alt="Photon.Realtime.IConnectionCallbacks" shape="rect" coords="0,0,238,24"/>
<area href="interface_photon_1_1_realtime_1_1_i_in_room_callbacks.xhtml" title="Collection of &quot;in room&quot; callbacks for the Realtime Api to cover: Players entering or leaving,..." alt="Photon.Realtime.IInRoomCallbacks" shape="rect" coords="248,0,486,24"/>
<area href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml" title="Collection of &quot;organizational&quot; callbacks for the Realtime Api to cover Matchmaking." alt="Photon.Realtime.IMatchmakingCallbacks" shape="rect" coords="496,0,734,24"/>
<area href="interface_photon_1_1_realtime_1_1_i_lobby_callbacks.xhtml" title="Collection of &quot;organizational&quot; callbacks for the Realtime Api to cover the Lobby." alt="Photon.Realtime.ILobbyCallbacks" shape="rect" coords="744,0,982,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger_1_1_debug.xhtml">Debug</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Mètodes públics</h2></td></tr>
<tr class="memitem:a0c1931e22e62cde2d06f34ea920ee5a1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a0c1931e22e62cde2d06f34ea920ee5a1">StartLogStats</a> ()</td></tr>
<tr class="separator:a0c1931e22e62cde2d06f34ea920ee5a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25b93575a8e632eccd6ad7230dc4318b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a25b93575a8e632eccd6ad7230dc4318b">StopLogStats</a> ()</td></tr>
<tr class="separator:a25b93575a8e632eccd6ad7230dc4318b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf28bee29826a6ef8c3e4af2faaae624"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#aaf28bee29826a6ef8c3e4af2faaae624">LogStats</a> ()</td></tr>
<tr class="memdesc:aaf28bee29826a6ef8c3e4af2faaae624"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger_1_1_debug.xhtml">Debug</a> logs vital traffic statistics about the attached <a class="el" href="namespace_photon.xhtml">Photon</a> Client.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#aaf28bee29826a6ef8c3e4af2faaae624">Més...</a><br /></td></tr>
<tr class="separator:aaf28bee29826a6ef8c3e4af2faaae624"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a673804e39d4122a0cb852d145918e0e9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a673804e39d4122a0cb852d145918e0e9">OnConnected</a> ()</td></tr>
<tr class="memdesc:a673804e39d4122a0cb852d145918e0e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called to signal that the "low level connection" got established but before the client can call operation on the server.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a673804e39d4122a0cb852d145918e0e9">Més...</a><br /></td></tr>
<tr class="separator:a673804e39d4122a0cb852d145918e0e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b53fdd4655db3ce620a1b7cef4fa734"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a2b53fdd4655db3ce620a1b7cef4fa734">OnConnectedToMaster</a> ()</td></tr>
<tr class="memdesc:a2b53fdd4655db3ce620a1b7cef4fa734"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the client is connected to the Master Server and ready for matchmaking and other tasks.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a2b53fdd4655db3ce620a1b7cef4fa734">Més...</a><br /></td></tr>
<tr class="separator:a2b53fdd4655db3ce620a1b7cef4fa734"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fd0804c5fe96d9301448269d1c48a62"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a4fd0804c5fe96d9301448269d1c48a62">OnFriendListUpdate</a> (List&lt; <a class="el" href="class_photon_1_1_realtime_1_1_friend_info.xhtml">FriendInfo</a> &gt; friendList)</td></tr>
<tr class="memdesc:a4fd0804c5fe96d9301448269d1c48a62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the server sent the response to a FindFriends request.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a4fd0804c5fe96d9301448269d1c48a62">Més...</a><br /></td></tr>
<tr class="separator:a4fd0804c5fe96d9301448269d1c48a62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8c53a6a62a31a50d6a6ef26bc6a98ff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#ad8c53a6a62a31a50d6a6ef26bc6a98ff">OnJoinedLobby</a> ()</td></tr>
<tr class="memdesc:ad8c53a6a62a31a50d6a6ef26bc6a98ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called on entering a lobby on the Master Server.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#ad8c53a6a62a31a50d6a6ef26bc6a98ff">Més...</a><br /></td></tr>
<tr class="separator:ad8c53a6a62a31a50d6a6ef26bc6a98ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b1c166e6eee292d5ac6be48e7405d95"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a2b1c166e6eee292d5ac6be48e7405d95">OnLeftLobby</a> ()</td></tr>
<tr class="memdesc:a2b1c166e6eee292d5ac6be48e7405d95"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called after leaving a lobby.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a2b1c166e6eee292d5ac6be48e7405d95">Més...</a><br /></td></tr>
<tr class="separator:a2b1c166e6eee292d5ac6be48e7405d95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3eb66f25db011ef615da478938359bd7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a3eb66f25db011ef615da478938359bd7">OnCreateRoomFailed</a> (short returnCode, string message)</td></tr>
<tr class="memdesc:a3eb66f25db011ef615da478938359bd7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the server couldn't create a room (OpCreateRoom failed).  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a3eb66f25db011ef615da478938359bd7">Més...</a><br /></td></tr>
<tr class="separator:a3eb66f25db011ef615da478938359bd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af823e1c5c8aca51b55b5913041244a4d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#af823e1c5c8aca51b55b5913041244a4d">OnJoinedRoom</a> ()</td></tr>
<tr class="memdesc:af823e1c5c8aca51b55b5913041244a4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the <a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_client.xhtml" title="This class implements the Photon LoadBalancing workflow by using a LoadBalancingPeer.">LoadBalancingClient</a> entered a room, no matter if this client created it or simply joined.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#af823e1c5c8aca51b55b5913041244a4d">Més...</a><br /></td></tr>
<tr class="separator:af823e1c5c8aca51b55b5913041244a4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04e8bf1437f4855030e0181e8dd85058"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a04e8bf1437f4855030e0181e8dd85058">OnJoinRoomFailed</a> (short returnCode, string message)</td></tr>
<tr class="memdesc:a04e8bf1437f4855030e0181e8dd85058"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when a previous OpJoinRoom call failed on the server.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a04e8bf1437f4855030e0181e8dd85058">Més...</a><br /></td></tr>
<tr class="separator:a04e8bf1437f4855030e0181e8dd85058"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c5363fe6ead5394cf8b1a3cf8a45239"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a5c5363fe6ead5394cf8b1a3cf8a45239">OnJoinRandomFailed</a> (short returnCode, string message)</td></tr>
<tr class="memdesc:a5c5363fe6ead5394cf8b1a3cf8a45239"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when a previous OpJoinRandom call failed on the server.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a5c5363fe6ead5394cf8b1a3cf8a45239">Més...</a><br /></td></tr>
<tr class="separator:a5c5363fe6ead5394cf8b1a3cf8a45239"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ee0315ac28270d31703ee07a1f4e0e1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a7ee0315ac28270d31703ee07a1f4e0e1">OnCreatedRoom</a> ()</td></tr>
<tr class="memdesc:a7ee0315ac28270d31703ee07a1f4e0e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when this client created a room and entered it.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a7ee0315ac28270d31703ee07a1f4e0e1">Més...</a><br /></td></tr>
<tr class="separator:a7ee0315ac28270d31703ee07a1f4e0e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a577c627d7b7f5904da4cadc0d0673a48"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a577c627d7b7f5904da4cadc0d0673a48">OnLeftRoom</a> ()</td></tr>
<tr class="memdesc:a577c627d7b7f5904da4cadc0d0673a48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the local user/client left a room, so the game's logic can clean up it's internal state.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a577c627d7b7f5904da4cadc0d0673a48">Més...</a><br /></td></tr>
<tr class="separator:a577c627d7b7f5904da4cadc0d0673a48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a551d8697ebc19a65b3b605e60425f65a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a551d8697ebc19a65b3b605e60425f65a">OnDisconnected</a> (<a class="el" href="namespace_photon_1_1_realtime.xhtml#ac8fdb8bec6a53e17604d94fb7a2e9cc6">DisconnectCause</a> cause)</td></tr>
<tr class="memdesc:a551d8697ebc19a65b3b605e60425f65a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called after disconnecting from the <a class="el" href="namespace_photon.xhtml">Photon</a> server.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a551d8697ebc19a65b3b605e60425f65a">Més...</a><br /></td></tr>
<tr class="separator:a551d8697ebc19a65b3b605e60425f65a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a848d2193dafa8e1828f0d93be50ebcf4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a848d2193dafa8e1828f0d93be50ebcf4">OnRegionListReceived</a> (<a class="el" href="class_photon_1_1_realtime_1_1_region_handler.xhtml">RegionHandler</a> regionHandler)</td></tr>
<tr class="memdesc:a848d2193dafa8e1828f0d93be50ebcf4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the Name Server provided a list of regions for your title.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a848d2193dafa8e1828f0d93be50ebcf4">Més...</a><br /></td></tr>
<tr class="separator:a848d2193dafa8e1828f0d93be50ebcf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83c7a7ede3e1eace39bd186947a691d0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a83c7a7ede3e1eace39bd186947a691d0">OnRoomListUpdate</a> (List&lt; <a class="el" href="class_photon_1_1_realtime_1_1_room_info.xhtml">RoomInfo</a> &gt; roomList)</td></tr>
<tr class="memdesc:a83c7a7ede3e1eace39bd186947a691d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called for any update of the room-listing while in a lobby (InLobby) on the Master Server.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a83c7a7ede3e1eace39bd186947a691d0">Més...</a><br /></td></tr>
<tr class="separator:a83c7a7ede3e1eace39bd186947a691d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cc78ed260af58781ff48bec6875a1c2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a0cc78ed260af58781ff48bec6875a1c2">OnPlayerEnteredRoom</a> (<a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml">Player</a> newPlayer)</td></tr>
<tr class="memdesc:a0cc78ed260af58781ff48bec6875a1c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when a remote player entered the room.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a0cc78ed260af58781ff48bec6875a1c2">Més...</a><br /></td></tr>
<tr class="separator:a0cc78ed260af58781ff48bec6875a1c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a056b5639b367a8e77320916ac439c19e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a056b5639b367a8e77320916ac439c19e">OnPlayerLeftRoom</a> (<a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml">Player</a> otherPlayer)</td></tr>
<tr class="memdesc:a056b5639b367a8e77320916ac439c19e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when a remote player left the room or became inactive.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a056b5639b367a8e77320916ac439c19e">Més...</a><br /></td></tr>
<tr class="separator:a056b5639b367a8e77320916ac439c19e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33bae5e53e92cf41938772422976c4cf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a33bae5e53e92cf41938772422976c4cf">OnRoomPropertiesUpdate</a> (<a class="el" href="_asteroids_game_manager_8cs.xhtml#afa613ef589c02dbd94acc273b62cdcfd">Hashtable</a> propertiesThatChanged)</td></tr>
<tr class="memdesc:a33bae5e53e92cf41938772422976c4cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when a room's custom properties changed.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a33bae5e53e92cf41938772422976c4cf">Més...</a><br /></td></tr>
<tr class="separator:a33bae5e53e92cf41938772422976c4cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7ff969876b0148a8c4535546a192556"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#ac7ff969876b0148a8c4535546a192556">OnPlayerPropertiesUpdate</a> (<a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml">Player</a> targetPlayer, <a class="el" href="_asteroids_game_manager_8cs.xhtml#afa613ef589c02dbd94acc273b62cdcfd">Hashtable</a> changedProps)</td></tr>
<tr class="memdesc:ac7ff969876b0148a8c4535546a192556"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when custom player-properties are changed.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#ac7ff969876b0148a8c4535546a192556">Més...</a><br /></td></tr>
<tr class="separator:ac7ff969876b0148a8c4535546a192556"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af65fe68dd5f61fc59103e027d0c1430b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#af65fe68dd5f61fc59103e027d0c1430b">OnMasterClientSwitched</a> (<a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml">Player</a> newMasterClient)</td></tr>
<tr class="memdesc:af65fe68dd5f61fc59103e027d0c1430b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called after switching to a new MasterClient when the current one leaves.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#af65fe68dd5f61fc59103e027d0c1430b">Més...</a><br /></td></tr>
<tr class="separator:af65fe68dd5f61fc59103e027d0c1430b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a196bfd3dba9f606619941f96acc0731e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a196bfd3dba9f606619941f96acc0731e">OnCustomAuthenticationResponse</a> (Dictionary&lt; string, object &gt; data)</td></tr>
<tr class="memdesc:a196bfd3dba9f606619941f96acc0731e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when your Custom Authentication service responds with additional data.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a196bfd3dba9f606619941f96acc0731e">Més...</a><br /></td></tr>
<tr class="separator:a196bfd3dba9f606619941f96acc0731e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7548b3ce10f15ddf2eaba14dfc4b1d0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#af7548b3ce10f15ddf2eaba14dfc4b1d0">OnCustomAuthenticationFailed</a> (string debugMessage)</td></tr>
<tr class="memdesc:af7548b3ce10f15ddf2eaba14dfc4b1d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the custom authentication failed.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#af7548b3ce10f15ddf2eaba14dfc4b1d0">Més...</a><br /></td></tr>
<tr class="separator:af7548b3ce10f15ddf2eaba14dfc4b1d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f4c333b1dd680d84da5d7f2f8d113a6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a3f4c333b1dd680d84da5d7f2f8d113a6">OnLobbyStatisticsUpdate</a> (List&lt; <a class="el" href="class_photon_1_1_realtime_1_1_typed_lobby_info.xhtml">TypedLobbyInfo</a> &gt; lobbyStatistics)</td></tr>
<tr class="memdesc:a3f4c333b1dd680d84da5d7f2f8d113a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the Master Server sent an update for the <a class="el" href="class_lobby.xhtml">Lobby</a> Statistics.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a3f4c333b1dd680d84da5d7f2f8d113a6">Més...</a><br /></td></tr>
<tr class="separator:a3f4c333b1dd680d84da5d7f2f8d113a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19ae1d03e4c2f36aab630b988ff52cec"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a19ae1d03e4c2f36aab630b988ff52cec">OnErrorInfo</a> (<a class="el" href="class_photon_1_1_realtime_1_1_error_info.xhtml">ErrorInfo</a> errorInfo)</td></tr>
<tr class="separator:a19ae1d03e4c2f36aab630b988ff52cec"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Atributs Públics</h2></td></tr>
<tr class="memitem:a7dc8a5533fdd74898df97c14de2aa979"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a7dc8a5533fdd74898df97c14de2aa979">LogTrafficStats</a> = true</td></tr>
<tr class="memdesc:a7dc8a5533fdd74898df97c14de2aa979"><td class="mdescLeft">&#160;</td><td class="mdescRight">Toggle to enable or disable traffic statistics logging.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a7dc8a5533fdd74898df97c14de2aa979">Més...</a><br /></td></tr>
<tr class="separator:a7dc8a5533fdd74898df97c14de2aa979"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="properties"></a>
Propietats</h2></td></tr>
<tr class="memitem:aaa60be63a18fa340b639480682737019"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_client.xhtml">LoadBalancingClient</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#aaa60be63a18fa340b639480682737019">Client</a><code> [get, set]</code></td></tr>
<tr class="memdesc:aaa60be63a18fa340b639480682737019"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="namespace_photon.xhtml">Photon</a> client to log information and statistics from.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#aaa60be63a18fa340b639480682737019">Més...</a><br /></td></tr>
<tr class="separator:aaa60be63a18fa340b639480682737019"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Mètodes Privats</h2></td></tr>
<tr class="memitem:aa6c6835ffde143fba76cb289e3c7c6f9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#aa6c6835ffde143fba76cb289e3c7c6f9">StartTrackValues</a> ()</td></tr>
<tr class="separator:aa6c6835ffde143fba76cb289e3c7c6f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a182b03a7f697b8dbe720027c65d77d25"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a182b03a7f697b8dbe720027c65d77d25">StopTrackValues</a> ()</td></tr>
<tr class="separator:a182b03a7f697b8dbe720027c65d77d25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9fd97374270d9c14b0fd96d56d56fc0"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#aa9fd97374270d9c14b0fd96d56d56fc0">GetFormattedTimestamp</a> ()</td></tr>
<tr class="separator:aa9fd97374270d9c14b0fd96d56d56fc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34d00b558ed7bb962043e7c00bc62dab"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a34d00b558ed7bb962043e7c00bc62dab">TrackValues</a> ()</td></tr>
<tr class="separator:a34d00b558ed7bb962043e7c00bc62dab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a9320afb45b2c3227b7da96e956521d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a7a9320afb45b2c3227b7da96e956521d">LogBasics</a> ()</td></tr>
<tr class="memdesc:a7a9320afb45b2c3227b7da96e956521d"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger_1_1_debug.xhtml">Debug</a> logs basic information (AppId, AppVersion, PeerID, Server address, <a class="el" href="class_photon_1_1_realtime_1_1_region.xhtml">Region</a>) about the attached <a class="el" href="namespace_photon.xhtml">Photon</a> Client.  <a href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a7a9320afb45b2c3227b7da96e956521d">Més...</a><br /></td></tr>
<tr class="separator:a7a9320afb45b2c3227b7da96e956521d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Atributs Privats</h2></td></tr>
<tr class="memitem:a0084564048fdcdfe1ab9bf31320eb15e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a0084564048fdcdfe1ab9bf31320eb15e">loggedStillOfflineMessage</a></td></tr>
<tr class="separator:a0084564048fdcdfe1ab9bf31320eb15e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef1d3f4d68a480879ab40112abfc7033"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_client.xhtml">LoadBalancingClient</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#aef1d3f4d68a480879ab40112abfc7033">client</a></td></tr>
<tr class="separator:aef1d3f4d68a480879ab40112abfc7033"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad503eb7865c0468fa860bd247741018c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_photon_1_1_realtime.xhtml#a0b1996e86891e8965cbb883e6a833298">Stopwatch</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#ad503eb7865c0468fa860bd247741018c">startStopwatch</a></td></tr>
<tr class="separator:ad503eb7865c0468fa860bd247741018c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1de434d4a43c13a2bda20b856fc601ac"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a1de434d4a43c13a2bda20b856fc601ac">pingMax</a></td></tr>
<tr class="separator:a1de434d4a43c13a2bda20b856fc601ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30359ba1219bb22f30388e9587c717d1"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a30359ba1219bb22f30388e9587c717d1">pingMin</a></td></tr>
<tr class="separator:a30359ba1219bb22f30388e9587c717d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Descripció Detallada</h2>
<div class="textblock"><p>Helper class to debug log basic information about <a class="el" href="namespace_photon.xhtml">Photon</a> client and vital traffic statistics. </p>
<p>Set <a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#aaa60be63a18fa340b639480682737019" title="Photon client to log information and statistics from.">SupportLogger.Client</a> for this to work. </p>
</div><h2 class="groupheader">Documentació de les Funcions Membre</h2>
<a id="aa9fd97374270d9c14b0fd96d56d56fc0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9fd97374270d9c14b0fd96d56d56fc0">&#9670;&nbsp;</a></span>GetFormattedTimestamp()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string Photon.Realtime.SupportLogger.GetFormattedTimestamp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7a9320afb45b2c3227b7da96e956521d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a9320afb45b2c3227b7da96e956521d">&#9670;&nbsp;</a></span>LogBasics()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.LogBasics </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="class_photon_1_1_realtime_1_1_support_logger_1_1_debug.xhtml">Debug</a> logs basic information (AppId, AppVersion, PeerID, Server address, <a class="el" href="class_photon_1_1_realtime_1_1_region.xhtml">Region</a>) about the attached <a class="el" href="namespace_photon.xhtml">Photon</a> Client. </p>

</div>
</div>
<a id="aaf28bee29826a6ef8c3e4af2faaae624"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf28bee29826a6ef8c3e4af2faaae624">&#9670;&nbsp;</a></span>LogStats()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.LogStats </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="class_photon_1_1_realtime_1_1_support_logger_1_1_debug.xhtml">Debug</a> logs vital traffic statistics about the attached <a class="el" href="namespace_photon.xhtml">Photon</a> Client. </p>

</div>
</div>
<a id="a673804e39d4122a0cb852d145918e0e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a673804e39d4122a0cb852d145918e0e9">&#9670;&nbsp;</a></span>OnConnected()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnConnected </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called to signal that the "low level connection" got established but before the client can call operation on the server. </p>
<p>After the (low level transport) connection is established, the client will automatically send the Authentication operation, which needs to get a response before the client can call other operations.</p>
<p>Your logic should wait for either: OnRegionListReceived or OnConnectedToMaster.</p>
<p>This callback is useful to detect if the server can be reached at all (technically). Most often, it's enough to implement <a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a551d8697ebc19a65b3b605e60425f65a" title="Called after disconnecting from the Photon server.">OnDisconnected(DisconnectCause cause)</a> and check for the cause.</p>
<p>This is not called for transitions from the masterserver to game servers. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_connection_callbacks.xhtml#a2e3c773af453748eaaf877585d3d8e1d">Photon.Realtime.IConnectionCallbacks</a>.</p>

</div>
</div>
<a id="a2b53fdd4655db3ce620a1b7cef4fa734"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b53fdd4655db3ce620a1b7cef4fa734">&#9670;&nbsp;</a></span>OnConnectedToMaster()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnConnectedToMaster </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when the client is connected to the Master Server and ready for matchmaking and other tasks. </p>
<p>The list of available rooms won't become available unless you join a lobby via <a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_client.xhtml#a4dd9222198402145e2e4e6c4f3462f9d" title="If already connected to a Master Server, this joins the specified lobby.">LoadBalancingClient.OpJoinLobby</a>. You can join rooms and create them even without being in a lobby. The default lobby is used in that case. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_connection_callbacks.xhtml#a52dfd77079d550168c7ff7aa0ce01a6c">Photon.Realtime.IConnectionCallbacks</a>.</p>

</div>
</div>
<a id="a7ee0315ac28270d31703ee07a1f4e0e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ee0315ac28270d31703ee07a1f4e0e1">&#9670;&nbsp;</a></span>OnCreatedRoom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnCreatedRoom </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when this client created a room and entered it. </p>
<p><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#af823e1c5c8aca51b55b5913041244a4d" title="Called when the LoadBalancingClient entered a room, no matter if this client created it or simply joi...">OnJoinedRoom()</a> will be called as well.</p>
<p>This callback is only called on the client which created a room (see OpCreateRoom).</p>
<p>As any client might close (or drop connection) anytime, there is a chance that the creator of a room does not execute OnCreatedRoom.</p>
<p>If you need specific room properties or a "start signal", implement <a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#af65fe68dd5f61fc59103e027d0c1430b" title="Called after switching to a new MasterClient when the current one leaves.">OnMasterClientSwitched()</a> and make each new MasterClient check the room's state. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml#a3d084f0aa95b2e8f48514695af73b31d">Photon.Realtime.IMatchmakingCallbacks</a>.</p>

</div>
</div>
<a id="a3eb66f25db011ef615da478938359bd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3eb66f25db011ef615da478938359bd7">&#9670;&nbsp;</a></span>OnCreateRoomFailed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnCreateRoomFailed </td>
          <td>(</td>
          <td class="paramtype">short&#160;</td>
          <td class="paramname"><em>returnCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>message</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when the server couldn't create a room (OpCreateRoom failed). </p>
<p>Creating a room may fail for various reasons. Most often, the room already exists (roomname in use) or the <a class="el" href="class_photon_1_1_realtime_1_1_room_options.xhtml" title="Wraps up common room properties needed when you create rooms.">RoomOptions</a> clash and it's impossible to create the room.</p>
<p>When creating a room fails on a Game Server: The client will cache the failure internally and returns to the Master Server before it calls the fail-callback. This way, the client is ready to find/create a room at the moment of the callback. In this case, the client skips calling OnConnectedToMaster but returning to the Master Server will still call OnConnected. Treat callbacks of OnConnected as pure information that the client could connect. </p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">returnCode</td><td>Operation ReturnCode from the server.</td></tr>
    <tr><td class="paramname">message</td><td><a class="el" href="class_photon_1_1_realtime_1_1_support_logger_1_1_debug.xhtml">Debug</a> message for the error.</td></tr>
  </table>
  </dd>
</dl>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml#a099d97fa4d65074adb0db876f47bacd7">Photon.Realtime.IMatchmakingCallbacks</a>.</p>

</div>
</div>
<a id="af7548b3ce10f15ddf2eaba14dfc4b1d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7548b3ce10f15ddf2eaba14dfc4b1d0">&#9670;&nbsp;</a></span>OnCustomAuthenticationFailed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnCustomAuthenticationFailed </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>debugMessage</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when the custom authentication failed. </p>
<p>Followed by disconnect!</p>
<p>Custom Authentication can fail due to user-input, bad tokens/secrets. If authentication is successful, this method is not called. Implement <a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#ad8c53a6a62a31a50d6a6ef26bc6a98ff" title="Called on entering a lobby on the Master Server.">OnJoinedLobby()</a> or <a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml#a2b53fdd4655db3ce620a1b7cef4fa734" title="Called when the client is connected to the Master Server and ready for matchmaking and other tasks.">OnConnectedToMaster()</a> (as usual).</p>
<p>During development of a game, it might also fail due to wrong configuration on the server side. In those cases, logging the debugMessage is very important.</p>
<p>Unless you setup a custom authentication service for your app (in the <a href="https://dashboard.photonengine.com">Dashboard</a>), this won't be called! </p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">debugMessage</td><td>Contains a debug message why authentication failed. This has to be fixed during development.</td></tr>
  </table>
  </dd>
</dl>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_connection_callbacks.xhtml#a669ed841654618813e551e11d7686225">Photon.Realtime.IConnectionCallbacks</a>.</p>

</div>
</div>
<a id="a196bfd3dba9f606619941f96acc0731e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a196bfd3dba9f606619941f96acc0731e">&#9670;&nbsp;</a></span>OnCustomAuthenticationResponse()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnCustomAuthenticationResponse </td>
          <td>(</td>
          <td class="paramtype">Dictionary&lt; string, object &gt;&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when your Custom Authentication service responds with additional data. </p>
<p>Custom Authentication services can include some custom data in their response. When present, that data is made available in this callback as Dictionary. While the keys of your data have to be strings, the values can be either string or a number (in Json). You need to make extra sure, that the value type is the one you expect. Numbers become (currently) int64.</p>
<p>Example: void OnCustomAuthenticationResponse(Dictionary&lt;string, object&gt; data) { ... } </p>
<p>https://doc.photonengine.com/en-us/realtime/current/reference/custom-authentication </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_connection_callbacks.xhtml#a2a7051e8442a636549eb73705168250c">Photon.Realtime.IConnectionCallbacks</a>.</p>

</div>
</div>
<a id="a551d8697ebc19a65b3b605e60425f65a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a551d8697ebc19a65b3b605e60425f65a">&#9670;&nbsp;</a></span>OnDisconnected()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnDisconnected </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_photon_1_1_realtime.xhtml#ac8fdb8bec6a53e17604d94fb7a2e9cc6">DisconnectCause</a>&#160;</td>
          <td class="paramname"><em>cause</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called after disconnecting from the <a class="el" href="namespace_photon.xhtml">Photon</a> server. </p>
<p>It could be a failure or an explicit disconnect call</p>
<p>The reason for this disconnect is provided as DisconnectCause. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_connection_callbacks.xhtml#a5e133a672790851ab0554fdc821c7727">Photon.Realtime.IConnectionCallbacks</a>.</p>

</div>
</div>
<a id="a19ae1d03e4c2f36aab630b988ff52cec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19ae1d03e4c2f36aab630b988ff52cec">&#9670;&nbsp;</a></span>OnErrorInfo()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnErrorInfo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_error_info.xhtml">ErrorInfo</a>&#160;</td>
          <td class="paramname"><em>errorInfo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4fd0804c5fe96d9301448269d1c48a62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fd0804c5fe96d9301448269d1c48a62">&#9670;&nbsp;</a></span>OnFriendListUpdate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnFriendListUpdate </td>
          <td>(</td>
          <td class="paramtype">List&lt; <a class="el" href="class_photon_1_1_realtime_1_1_friend_info.xhtml">FriendInfo</a> &gt;&#160;</td>
          <td class="paramname"><em>friendList</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when the server sent the response to a FindFriends request. </p>
<p>After calling OpFindFriends, the Master Server will cache the friend list and send updates to the friend list. The friends includes the name, userId, online state and the room (if any) for each requested user/friend.</p>
<p>Use the friendList to update your UI and store it, if the UI should highlight changes. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml#a8f08da473647d070c554b5b4daba60af">Photon.Realtime.IMatchmakingCallbacks</a>.</p>

</div>
</div>
<a id="ad8c53a6a62a31a50d6a6ef26bc6a98ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8c53a6a62a31a50d6a6ef26bc6a98ff">&#9670;&nbsp;</a></span>OnJoinedLobby()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnJoinedLobby </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called on entering a lobby on the Master Server. </p>
<p>The actual room-list updates will call OnRoomListUpdate.</p>
<p>While in the lobby, the roomlist is automatically updated in fixed intervals (which you can't modify in the public cloud). The room list gets available via OnRoomListUpdate. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_lobby_callbacks.xhtml#ac3d6267cf8d9b108ed0b621a9e6eab46">Photon.Realtime.ILobbyCallbacks</a>.</p>

</div>
</div>
<a id="af823e1c5c8aca51b55b5913041244a4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af823e1c5c8aca51b55b5913041244a4d">&#9670;&nbsp;</a></span>OnJoinedRoom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnJoinedRoom </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when the <a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_client.xhtml" title="This class implements the Photon LoadBalancing workflow by using a LoadBalancingPeer.">LoadBalancingClient</a> entered a room, no matter if this client created it or simply joined. </p>
<p>When this is called, you can access the existing players in <a class="el" href="class_photon_1_1_realtime_1_1_room.xhtml#ad1ed20ddc14c6ec0c9a74aff4eb201fa" title="While inside a Room, this is the list of players who are also in that room.">Room.Players</a>, their custom properties and <a class="el" href="class_photon_1_1_realtime_1_1_room_info.xhtml#a9f8bff52fad7c5ad1d1eb321c97e1fbf" title="Read-only &quot;cache&quot; of custom properties of a room.">Room.CustomProperties</a>.</p>
<p>In this callback, you could create player objects. For example in Unity, instantiate a prefab for the player.</p>
<p>If you want a match to be started "actively", enable the user to signal "ready" (using OpRaiseEvent or a Custom Property). </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml#a8add9e72c38d241a448f4b539acd684b">Photon.Realtime.IMatchmakingCallbacks</a>.</p>

</div>
</div>
<a id="a5c5363fe6ead5394cf8b1a3cf8a45239"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c5363fe6ead5394cf8b1a3cf8a45239">&#9670;&nbsp;</a></span>OnJoinRandomFailed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnJoinRandomFailed </td>
          <td>(</td>
          <td class="paramtype">short&#160;</td>
          <td class="paramname"><em>returnCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>message</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when a previous OpJoinRandom call failed on the server. </p>
<p>The most common causes are that a room is full or does not exist (due to someone else being faster or closing the room).</p>
<p>This operation is only ever sent to the Master Server. Once a room is found by the Master Server, the client will head off to the designated Game Server and use the operation Join on the Game Server.</p>
<p>When using multiple lobbies (via OpJoinLobby or a <a class="el" href="class_photon_1_1_realtime_1_1_typed_lobby.xhtml" title="Refers to a specific lobby on the server.">TypedLobby</a> parameter), another lobby might have more/fitting rooms.<br  />
 </p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">returnCode</td><td>Operation ReturnCode from the server.</td></tr>
    <tr><td class="paramname">message</td><td><a class="el" href="class_photon_1_1_realtime_1_1_support_logger_1_1_debug.xhtml">Debug</a> message for the error.</td></tr>
  </table>
  </dd>
</dl>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml#a837e8522439b89e68805a2b2c25fa824">Photon.Realtime.IMatchmakingCallbacks</a>.</p>

</div>
</div>
<a id="a04e8bf1437f4855030e0181e8dd85058"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04e8bf1437f4855030e0181e8dd85058">&#9670;&nbsp;</a></span>OnJoinRoomFailed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnJoinRoomFailed </td>
          <td>(</td>
          <td class="paramtype">short&#160;</td>
          <td class="paramname"><em>returnCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>message</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when a previous OpJoinRoom call failed on the server. </p>
<p>Joining a room may fail for various reasons. Most often, the room is full or does not exist anymore (due to someone else being faster or closing the room).</p>
<p>When joining a room fails on a Game Server: The client will cache the failure internally and returns to the Master Server before it calls the fail-callback. This way, the client is ready to find/create a room at the moment of the callback. In this case, the client skips calling OnConnectedToMaster but returning to the Master Server will still call OnConnected. Treat callbacks of OnConnected as pure information that the client could connect. </p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">returnCode</td><td>Operation ReturnCode from the server.</td></tr>
    <tr><td class="paramname">message</td><td><a class="el" href="class_photon_1_1_realtime_1_1_support_logger_1_1_debug.xhtml">Debug</a> message for the error.</td></tr>
  </table>
  </dd>
</dl>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml#a55bcc9aca42ebe749a8dcb210ed145e9">Photon.Realtime.IMatchmakingCallbacks</a>.</p>

</div>
</div>
<a id="a2b1c166e6eee292d5ac6be48e7405d95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b1c166e6eee292d5ac6be48e7405d95">&#9670;&nbsp;</a></span>OnLeftLobby()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnLeftLobby </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called after leaving a lobby. </p>
<p>When you leave a lobby, OpCreateRoom and OpJoinRandomRoom automatically refer to the default lobby. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_lobby_callbacks.xhtml#ae31b4cb08b81157a52a3550be24ceae3">Photon.Realtime.ILobbyCallbacks</a>.</p>

</div>
</div>
<a id="a577c627d7b7f5904da4cadc0d0673a48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a577c627d7b7f5904da4cadc0d0673a48">&#9670;&nbsp;</a></span>OnLeftRoom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnLeftRoom </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when the local user/client left a room, so the game's logic can clean up it's internal state. </p>
<p>When leaving a room, the <a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_client.xhtml" title="This class implements the Photon LoadBalancing workflow by using a LoadBalancingPeer.">LoadBalancingClient</a> will disconnect the Game Server and connect to the Master Server. This wraps up multiple internal actions.</p>
<p>Wait for the callback OnConnectedToMaster, before you use lobbies and join or create rooms. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml#acedd813313ad6724f3935801481d8e8f">Photon.Realtime.IMatchmakingCallbacks</a>.</p>

</div>
</div>
<a id="a3f4c333b1dd680d84da5d7f2f8d113a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f4c333b1dd680d84da5d7f2f8d113a6">&#9670;&nbsp;</a></span>OnLobbyStatisticsUpdate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnLobbyStatisticsUpdate </td>
          <td>(</td>
          <td class="paramtype">List&lt; <a class="el" href="class_photon_1_1_realtime_1_1_typed_lobby_info.xhtml">TypedLobbyInfo</a> &gt;&#160;</td>
          <td class="paramname"><em>lobbyStatistics</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when the Master Server sent an update for the <a class="el" href="class_lobby.xhtml">Lobby</a> Statistics. </p>
<p>This callback has two preconditions: EnableLobbyStatistics must be set to true, before this client connects. And the client has to be connected to the Master Server, which is providing the info about lobbies. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_lobby_callbacks.xhtml#ab2cc546cf0e5189d90360217ebdabd40">Photon.Realtime.ILobbyCallbacks</a>.</p>

</div>
</div>
<a id="af65fe68dd5f61fc59103e027d0c1430b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af65fe68dd5f61fc59103e027d0c1430b">&#9670;&nbsp;</a></span>OnMasterClientSwitched()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnMasterClientSwitched </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml">Player</a>&#160;</td>
          <td class="paramname"><em>newMasterClient</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called after switching to a new MasterClient when the current one leaves. </p>
<p>This is not called when this client enters a room. The former MasterClient is still in the player list when this method get called. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_in_room_callbacks.xhtml#afc7c0b914b9d0ee3f82e8b8556380876">Photon.Realtime.IInRoomCallbacks</a>.</p>

</div>
</div>
<a id="a0cc78ed260af58781ff48bec6875a1c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0cc78ed260af58781ff48bec6875a1c2">&#9670;&nbsp;</a></span>OnPlayerEnteredRoom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnPlayerEnteredRoom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml">Player</a>&#160;</td>
          <td class="paramname"><em>newPlayer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when a remote player entered the room. </p>
<p>This <a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml" title="Summarizes a &quot;player&quot; within a room, identified (in that room) by ID (or &quot;actorNumber&quot;).">Player</a> is already added to the playerlist.</p>
<p>If your game starts with a certain number of players, this callback can be useful to check the Room.playerCount and find out if you can start. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_in_room_callbacks.xhtml#a0bc282922b4ae18648e68c56085b4f97">Photon.Realtime.IInRoomCallbacks</a>.</p>

</div>
</div>
<a id="a056b5639b367a8e77320916ac439c19e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a056b5639b367a8e77320916ac439c19e">&#9670;&nbsp;</a></span>OnPlayerLeftRoom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnPlayerLeftRoom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml">Player</a>&#160;</td>
          <td class="paramname"><em>otherPlayer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when a remote player left the room or became inactive. </p>
<p>Check otherPlayer.IsInactive.</p>
<p>If another player leaves the room or if the server detects a lost connection, this callback will be used to notify your game logic.</p>
<p>Depending on the room's setup, players may become inactive, which means they may return and retake their spot in the room. In such cases, the <a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml" title="Summarizes a &quot;player&quot; within a room, identified (in that room) by ID (or &quot;actorNumber&quot;).">Player</a> stays in the <a class="el" href="class_photon_1_1_realtime_1_1_room.xhtml#ad1ed20ddc14c6ec0c9a74aff4eb201fa" title="While inside a Room, this is the list of players who are also in that room.">Room.Players</a> dictionary.</p>
<p>If the player is not just inactive, it gets removed from the <a class="el" href="class_photon_1_1_realtime_1_1_room.xhtml#ad1ed20ddc14c6ec0c9a74aff4eb201fa" title="While inside a Room, this is the list of players who are also in that room.">Room.Players</a> dictionary, before the callback is called. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_in_room_callbacks.xhtml#a778a90ca623c41ffae0f62cc1732a29e">Photon.Realtime.IInRoomCallbacks</a>.</p>

</div>
</div>
<a id="ac7ff969876b0148a8c4535546a192556"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7ff969876b0148a8c4535546a192556">&#9670;&nbsp;</a></span>OnPlayerPropertiesUpdate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnPlayerPropertiesUpdate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml">Player</a>&#160;</td>
          <td class="paramname"><em>targetPlayer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_asteroids_game_manager_8cs.xhtml#afa613ef589c02dbd94acc273b62cdcfd">Hashtable</a>&#160;</td>
          <td class="paramname"><em>changedProps</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when custom player-properties are changed. </p>
<p><a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml" title="Summarizes a &quot;player&quot; within a room, identified (in that room) by ID (or &quot;actorNumber&quot;).">Player</a> and the changed properties are passed as object[].</p>
<p>Changing properties must be done by <a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml#a73de822cb4ab788e9dce94795566a656" title="Updates and synchronizes this Player&#39;s Custom Properties.">Player.SetCustomProperties</a>, which causes this callback locally, too. </p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">targetPlayer</td><td>Contains <a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml" title="Summarizes a &quot;player&quot; within a room, identified (in that room) by ID (or &quot;actorNumber&quot;).">Player</a> that changed.</td></tr>
    <tr><td class="paramname">changedProps</td><td>Contains the properties that changed.</td></tr>
  </table>
  </dd>
</dl>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_in_room_callbacks.xhtml#a02ac010a10c47dbdd59ae9a63b970583">Photon.Realtime.IInRoomCallbacks</a>.</p>

</div>
</div>
<a id="a848d2193dafa8e1828f0d93be50ebcf4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a848d2193dafa8e1828f0d93be50ebcf4">&#9670;&nbsp;</a></span>OnRegionListReceived()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnRegionListReceived </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_region_handler.xhtml">RegionHandler</a>&#160;</td>
          <td class="paramname"><em>regionHandler</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when the Name Server provided a list of regions for your title. </p>
<p>Check the <a class="el" href="class_photon_1_1_realtime_1_1_region_handler.xhtml" title="Provides methods to work with Photon&#39;s regions (Photon Cloud) and can be use to find the one with bes...">RegionHandler</a> class description, to make use of the provided values.</p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">regionHandler</td><td>The currently used <a class="el" href="class_photon_1_1_realtime_1_1_region_handler.xhtml" title="Provides methods to work with Photon&#39;s regions (Photon Cloud) and can be use to find the one with bes...">RegionHandler</a>.</td></tr>
  </table>
  </dd>
</dl>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_connection_callbacks.xhtml#a69f1c715fb64aff2dda2d18832ff45d2">Photon.Realtime.IConnectionCallbacks</a>.</p>

</div>
</div>
<a id="a83c7a7ede3e1eace39bd186947a691d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83c7a7ede3e1eace39bd186947a691d0">&#9670;&nbsp;</a></span>OnRoomListUpdate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnRoomListUpdate </td>
          <td>(</td>
          <td class="paramtype">List&lt; <a class="el" href="class_photon_1_1_realtime_1_1_room_info.xhtml">RoomInfo</a> &gt;&#160;</td>
          <td class="paramname"><em>roomList</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called for any update of the room-listing while in a lobby (InLobby) on the Master Server. </p>
<p>Each item is a <a class="el" href="class_photon_1_1_realtime_1_1_room_info.xhtml" title="A simplified room with just the info required to list and join, used for the room listing in the lobb...">RoomInfo</a> which might include custom properties (provided you defined those as lobby-listed when creating a room). Not all types of lobbies provide a listing of rooms to the client. Some are silent and specialized for server-side matchmaking. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_lobby_callbacks.xhtml#ae07fb2877a6af51b34db77422187dcf6">Photon.Realtime.ILobbyCallbacks</a>.</p>

</div>
</div>
<a id="a33bae5e53e92cf41938772422976c4cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33bae5e53e92cf41938772422976c4cf">&#9670;&nbsp;</a></span>OnRoomPropertiesUpdate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.OnRoomPropertiesUpdate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_asteroids_game_manager_8cs.xhtml#afa613ef589c02dbd94acc273b62cdcfd">Hashtable</a>&#160;</td>
          <td class="paramname"><em>propertiesThatChanged</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when a room's custom properties changed. </p>
<p>The propertiesThatChanged contains all that was set via <a class="el" href="class_photon_1_1_realtime_1_1_room.xhtml#aff6e067d041db92e4fbde6a3277926ad" title="Updates and synchronizes this Room&#39;s Custom Properties.">Room.SetCustomProperties</a>.</p>
<p>Since v1.25 this method has one parameter: Hashtable propertiesThatChanged.<br  />
 Changing properties must be done by <a class="el" href="class_photon_1_1_realtime_1_1_room.xhtml#aff6e067d041db92e4fbde6a3277926ad" title="Updates and synchronizes this Room&#39;s Custom Properties.">Room.SetCustomProperties</a>, which causes this callback locally, too. </p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">propertiesThatChanged</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_in_room_callbacks.xhtml#aaa3dfde1d96b6b3cba50db6e706af378">Photon.Realtime.IInRoomCallbacks</a>.</p>

</div>
</div>
<a id="a0c1931e22e62cde2d06f34ea920ee5a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c1931e22e62cde2d06f34ea920ee5a1">&#9670;&nbsp;</a></span>StartLogStats()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.StartLogStats </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa6c6835ffde143fba76cb289e3c7c6f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6c6835ffde143fba76cb289e3c7c6f9">&#9670;&nbsp;</a></span>StartTrackValues()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.StartTrackValues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a25b93575a8e632eccd6ad7230dc4318b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25b93575a8e632eccd6ad7230dc4318b">&#9670;&nbsp;</a></span>StopLogStats()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.StopLogStats </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a182b03a7f697b8dbe720027c65d77d25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a182b03a7f697b8dbe720027c65d77d25">&#9670;&nbsp;</a></span>StopTrackValues()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.StopTrackValues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a34d00b558ed7bb962043e7c00bc62dab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34d00b558ed7bb962043e7c00bc62dab">&#9670;&nbsp;</a></span>TrackValues()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.SupportLogger.TrackValues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Documentació de les Dades Membre</h2>
<a id="aef1d3f4d68a480879ab40112abfc7033"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef1d3f4d68a480879ab40112abfc7033">&#9670;&nbsp;</a></span>client</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_client.xhtml">LoadBalancingClient</a> Photon.Realtime.SupportLogger.client</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0084564048fdcdfe1ab9bf31320eb15e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0084564048fdcdfe1ab9bf31320eb15e">&#9670;&nbsp;</a></span>loggedStillOfflineMessage</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Photon.Realtime.SupportLogger.loggedStillOfflineMessage</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7dc8a5533fdd74898df97c14de2aa979"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7dc8a5533fdd74898df97c14de2aa979">&#9670;&nbsp;</a></span>LogTrafficStats</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Photon.Realtime.SupportLogger.LogTrafficStats = true</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Toggle to enable or disable traffic statistics logging. </p>

</div>
</div>
<a id="a1de434d4a43c13a2bda20b856fc601ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1de434d4a43c13a2bda20b856fc601ac">&#9670;&nbsp;</a></span>pingMax</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Photon.Realtime.SupportLogger.pingMax</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a30359ba1219bb22f30388e9587c717d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30359ba1219bb22f30388e9587c717d1">&#9670;&nbsp;</a></span>pingMin</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Photon.Realtime.SupportLogger.pingMin</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad503eb7865c0468fa860bd247741018c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad503eb7865c0468fa860bd247741018c">&#9670;&nbsp;</a></span>startStopwatch</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_photon_1_1_realtime.xhtml#a0b1996e86891e8965cbb883e6a833298">Stopwatch</a> Photon.Realtime.SupportLogger.startStopwatch</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Documentació de les Propietats</h2>
<a id="aaa60be63a18fa340b639480682737019"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa60be63a18fa340b639480682737019">&#9670;&nbsp;</a></span>Client</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_client.xhtml">LoadBalancingClient</a> Photon.Realtime.SupportLogger.Client</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="namespace_photon.xhtml">Photon</a> client to log information and statistics from. </p>

</div>
</div>
<hr/>La documentació d'aquesta classe es va generar a partir del següent fitxer:<ul>
<li>F:/Unity Projects/Treball de Fi de Grau/Assets/Photon/PhotonRealtime/Code/<a class="el" href="_support_logger_8cs.xhtml">SupportLogger.cs</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_photon.xhtml">Photon</a></li><li class="navelem"><a class="el" href="namespace_photon_1_1_realtime.xhtml">Realtime</a></li><li class="navelem"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml">SupportLogger</a></li>
    <li class="footer">Generat a Dg Jun 27 2021 02:00:13 per a Treball de Fi de Grau per <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
