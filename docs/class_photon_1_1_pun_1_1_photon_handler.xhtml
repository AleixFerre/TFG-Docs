<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Treball de Fi de Grau: Referència de la Classe Photon.Pun.PhotonHandler</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Treball de Fi de Grau
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">Documentació pel treball de final de grau. Implementació d&#39;una base per un joc de gènere MOBA multijugador en línia.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generat per Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Cerca','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Cerca');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_photon_1_1_pun_1_1_photon_handler.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Mètodes públics</a> &#124;
<a href="#pub-static-attribs">Atributs Públics Estàtics</a> &#124;
<a href="#pro-methods">Mètodes Protegits</a> &#124;
<a href="#pro-attribs">Atributs Protegits</a> &#124;
<a href="#pri-attribs">Atributs Privats</a> &#124;
<a href="#pri-static-attribs">Atributs Privats Estàtics</a> &#124;
<a href="class_photon_1_1_pun_1_1_photon_handler-members.xhtml">Llista de tots els membres</a>  </div>
  <div class="headertitle">
<div class="title">Referència de la Classe Photon.Pun.PhotonHandler</div>  </div>
</div><!--header-->
<div class="contents">

<p>Internal MonoBehaviour that allows <a class="el" href="namespace_photon.xhtml">Photon</a> to run an Update loop.  
 <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#details">Més...</a></p>
<div class="dynheader">
Diagrama d'Herència per a Photon.Pun.PhotonHandler:</div>
<div class="dyncontent">
 <div class="center">
  <img src="class_photon_1_1_pun_1_1_photon_handler.png" usemap="#Photon.Pun.PhotonHandler_map" alt=""/>
  <map id="Photon.Pun.PhotonHandler_map" name="Photon.Pun.PhotonHandler_map">
<area href="class_photon_1_1_realtime_1_1_connection_handler.xhtml" alt="Photon.Realtime.ConnectionHandler" shape="rect" coords="0,0,238,24"/>
<area href="interface_photon_1_1_realtime_1_1_i_in_room_callbacks.xhtml" title="Collection of &quot;in room&quot; callbacks for the Realtime Api to cover: Players entering or leaving,..." alt="Photon.Realtime.IInRoomCallbacks" shape="rect" coords="248,0,486,24"/>
<area href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml" title="Collection of &quot;organizational&quot; callbacks for the Realtime Api to cover Matchmaking." alt="Photon.Realtime.IMatchmakingCallbacks" shape="rect" coords="496,0,734,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Mètodes públics</h2></td></tr>
<tr class="memitem:a31b95569cd3591c6e75e0108d1b487ec"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a31b95569cd3591c6e75e0108d1b487ec">OnCreatedRoom</a> ()</td></tr>
<tr class="memdesc:a31b95569cd3591c6e75e0108d1b487ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when this client created a room and entered it.  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a31b95569cd3591c6e75e0108d1b487ec">Més...</a><br /></td></tr>
<tr class="separator:a31b95569cd3591c6e75e0108d1b487ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2151f091273866f9db9231f06f17ba6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#ae2151f091273866f9db9231f06f17ba6">OnRoomPropertiesUpdate</a> (<a class="el" href="namespace_photon_1_1_pun.xhtml#ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</a> propertiesThatChanged)</td></tr>
<tr class="memdesc:ae2151f091273866f9db9231f06f17ba6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when a room's custom properties changed.  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#ae2151f091273866f9db9231f06f17ba6">Més...</a><br /></td></tr>
<tr class="separator:ae2151f091273866f9db9231f06f17ba6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad736b0da9610c35b6a8e1f3843a3432"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#aad736b0da9610c35b6a8e1f3843a3432">OnPlayerPropertiesUpdate</a> (<a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml">Player</a> targetPlayer, <a class="el" href="namespace_photon_1_1_pun.xhtml#ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</a> changedProps)</td></tr>
<tr class="memdesc:aad736b0da9610c35b6a8e1f3843a3432"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when custom player-properties are changed.  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#aad736b0da9610c35b6a8e1f3843a3432">Més...</a><br /></td></tr>
<tr class="separator:aad736b0da9610c35b6a8e1f3843a3432"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e96eaeb9b43f15faf2da080804c7e8c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a4e96eaeb9b43f15faf2da080804c7e8c">OnMasterClientSwitched</a> (<a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml">Player</a> newMasterClient)</td></tr>
<tr class="memdesc:a4e96eaeb9b43f15faf2da080804c7e8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called after switching to a new MasterClient when the current one leaves.  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a4e96eaeb9b43f15faf2da080804c7e8c">Més...</a><br /></td></tr>
<tr class="separator:a4e96eaeb9b43f15faf2da080804c7e8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e8067193d4d754bd75eddb0e8447462"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a8e8067193d4d754bd75eddb0e8447462">OnFriendListUpdate</a> (System.Collections.Generic.List&lt; <a class="el" href="class_photon_1_1_realtime_1_1_friend_info.xhtml">FriendInfo</a> &gt; friendList)</td></tr>
<tr class="separator:a8e8067193d4d754bd75eddb0e8447462"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b2e9850b743eba080cf7ca0353ba70a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a4b2e9850b743eba080cf7ca0353ba70a">OnCreateRoomFailed</a> (short returnCode, string message)</td></tr>
<tr class="memdesc:a4b2e9850b743eba080cf7ca0353ba70a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the server couldn't create a room (OpCreateRoom failed).  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a4b2e9850b743eba080cf7ca0353ba70a">Més...</a><br /></td></tr>
<tr class="separator:a4b2e9850b743eba080cf7ca0353ba70a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9994103e468b4c42882a5da352eff1d3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a9994103e468b4c42882a5da352eff1d3">OnJoinRoomFailed</a> (short returnCode, string message)</td></tr>
<tr class="memdesc:a9994103e468b4c42882a5da352eff1d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when a previous OpJoinRoom call failed on the server.  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a9994103e468b4c42882a5da352eff1d3">Més...</a><br /></td></tr>
<tr class="separator:a9994103e468b4c42882a5da352eff1d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41719240819fa0448e07dc72aff9765b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a41719240819fa0448e07dc72aff9765b">OnJoinRandomFailed</a> (short returnCode, string message)</td></tr>
<tr class="memdesc:a41719240819fa0448e07dc72aff9765b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when a previous OpJoinRandom call failed on the server.  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a41719240819fa0448e07dc72aff9765b">Més...</a><br /></td></tr>
<tr class="separator:a41719240819fa0448e07dc72aff9765b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7b3ace36c836fa7769805b6e5adeb5c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#ac7b3ace36c836fa7769805b6e5adeb5c">OnJoinedRoom</a> ()</td></tr>
<tr class="memdesc:ac7b3ace36c836fa7769805b6e5adeb5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the LoadBalancingClient entered a room, no matter if this client created it or simply joined.  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#ac7b3ace36c836fa7769805b6e5adeb5c">Més...</a><br /></td></tr>
<tr class="separator:ac7b3ace36c836fa7769805b6e5adeb5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0285f9103d26b5294838b96c56d92a0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#af0285f9103d26b5294838b96c56d92a0">OnLeftRoom</a> ()</td></tr>
<tr class="memdesc:af0285f9103d26b5294838b96c56d92a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the local user/client left a room, so the game's logic can clean up it's internal state.  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#af0285f9103d26b5294838b96c56d92a0">Més...</a><br /></td></tr>
<tr class="separator:af0285f9103d26b5294838b96c56d92a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8e15d8d7396635d72829a9773db4d22"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#ab8e15d8d7396635d72829a9773db4d22">OnPlayerEnteredRoom</a> (<a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml">Player</a> newPlayer)</td></tr>
<tr class="memdesc:ab8e15d8d7396635d72829a9773db4d22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when a remote player entered the room.  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#ab8e15d8d7396635d72829a9773db4d22">Més...</a><br /></td></tr>
<tr class="separator:ab8e15d8d7396635d72829a9773db4d22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fd99a38963f7c82ec42034f5108e6a5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a4fd99a38963f7c82ec42034f5108e6a5">OnPlayerLeftRoom</a> (<a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml">Player</a> otherPlayer)</td></tr>
<tr class="memdesc:a4fd99a38963f7c82ec42034f5108e6a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when a remote player left the room or became inactive.  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a4fd99a38963f7c82ec42034f5108e6a5">Més...</a><br /></td></tr>
<tr class="separator:a4fd99a38963f7c82ec42034f5108e6a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_photon_1_1_realtime_1_1_connection_handler"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_photon_1_1_realtime_1_1_connection_handler')"><img src="closed.png" alt="-"/>&#160;Mètodes públics inherited from <a class="el" href="class_photon_1_1_realtime_1_1_connection_handler.xhtml">Photon.Realtime.ConnectionHandler</a></td></tr>
<tr class="memitem:ad814fc7b6a0761684e69ef3a24a11dce inherit pub_methods_class_photon_1_1_realtime_1_1_connection_handler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_connection_handler.xhtml#ad814fc7b6a0761684e69ef3a24a11dce">StartFallbackSendAckThread</a> ()</td></tr>
<tr class="separator:ad814fc7b6a0761684e69ef3a24a11dce inherit pub_methods_class_photon_1_1_realtime_1_1_connection_handler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a969cdb4363d7e5952056b4f2eff2e67b inherit pub_methods_class_photon_1_1_realtime_1_1_connection_handler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_connection_handler.xhtml#a969cdb4363d7e5952056b4f2eff2e67b">StopFallbackSendAckThread</a> ()</td></tr>
<tr class="separator:a969cdb4363d7e5952056b4f2eff2e67b inherit pub_methods_class_photon_1_1_realtime_1_1_connection_handler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a780f42f9b50ecf72fba4ec2313679497 inherit pub_methods_class_photon_1_1_realtime_1_1_connection_handler"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_connection_handler.xhtml#a780f42f9b50ecf72fba4ec2313679497">RealtimeFallbackThread</a> ()</td></tr>
<tr class="memdesc:a780f42f9b50ecf72fba4ec2313679497 inherit pub_methods_class_photon_1_1_realtime_1_1_connection_handler"><td class="mdescLeft">&#160;</td><td class="mdescRight">A thread which runs independent from the Update() calls. Keeps connections online while loading or in background. See <a class="el" href="class_photon_1_1_realtime_1_1_connection_handler.xhtml#aa8e28a6e11a689c36fcc5a4d38684403" title="Defines for how long the Fallback Thread should keep the connection, before it may time out as usual.">KeepAliveInBackground</a>.  <a href="class_photon_1_1_realtime_1_1_connection_handler.xhtml#a780f42f9b50ecf72fba4ec2313679497">Més...</a><br /></td></tr>
<tr class="separator:a780f42f9b50ecf72fba4ec2313679497 inherit pub_methods_class_photon_1_1_realtime_1_1_connection_handler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks')"><img src="closed.png" alt="-"/>&#160;Mètodes públics inherited from <a class="el" href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml">Photon.Realtime.IMatchmakingCallbacks</a></td></tr>
<tr class="memitem:a8f08da473647d070c554b5b4daba60af inherit pub_methods_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml#a8f08da473647d070c554b5b4daba60af">OnFriendListUpdate</a> (List&lt; <a class="el" href="class_photon_1_1_realtime_1_1_friend_info.xhtml">FriendInfo</a> &gt; friendList)</td></tr>
<tr class="memdesc:a8f08da473647d070c554b5b4daba60af inherit pub_methods_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the server sent the response to a FindFriends request.  <a href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml#a8f08da473647d070c554b5b4daba60af">Més...</a><br /></td></tr>
<tr class="separator:a8f08da473647d070c554b5b4daba60af inherit pub_methods_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Atributs Públics Estàtics</h2></td></tr>
<tr class="memitem:a5491e28e5a2906be4504f5543e404922"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a5491e28e5a2906be4504f5543e404922">MaxDatagrams</a> = 3</td></tr>
<tr class="memdesc:a5491e28e5a2906be4504f5543e404922"><td class="mdescLeft">&#160;</td><td class="mdescRight">Limits the number of datagrams that are created in each LateUpdate.  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a5491e28e5a2906be4504f5543e404922">Més...</a><br /></td></tr>
<tr class="separator:a5491e28e5a2906be4504f5543e404922"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ea9464eb8e01906b8b6d6bc3a9d8b7c"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a8ea9464eb8e01906b8b6d6bc3a9d8b7c">SendAsap</a></td></tr>
<tr class="memdesc:a8ea9464eb8e01906b8b6d6bc3a9d8b7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Signals that outgoing messages should be sent in the next LateUpdate call.  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a8ea9464eb8e01906b8b6d6bc3a9d8b7c">Més...</a><br /></td></tr>
<tr class="separator:a8ea9464eb8e01906b8b6d6bc3a9d8b7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Mètodes Protegits</h2></td></tr>
<tr class="memitem:aeb2f23a7c7c298228c28440c159a99f3"><td class="memItemLeft" align="right" valign="top">override void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#aeb2f23a7c7c298228c28440c159a99f3">Awake</a> ()</td></tr>
<tr class="separator:aeb2f23a7c7c298228c28440c159a99f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4dd266cc56b759031c2afa60e020628"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#ab4dd266cc56b759031c2afa60e020628">OnEnable</a> ()</td></tr>
<tr class="separator:ab4dd266cc56b759031c2afa60e020628"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0755cda6a334184f052797f4c639bb8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#af0755cda6a334184f052797f4c639bb8">Start</a> ()</td></tr>
<tr class="separator:af0755cda6a334184f052797f4c639bb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af42508b4b926c2de0ebe35cdc14a12fb"><td class="memItemLeft" align="right" valign="top">override void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#af42508b4b926c2de0ebe35cdc14a12fb">OnDisable</a> ()</td></tr>
<tr class="separator:af42508b4b926c2de0ebe35cdc14a12fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94de76e1aba7602887361768002a4d84"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a94de76e1aba7602887361768002a4d84">FixedUpdate</a> ()</td></tr>
<tr class="memdesc:a94de76e1aba7602887361768002a4d84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called in intervals by UnityEngine. Affected by Time.timeScale.  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a94de76e1aba7602887361768002a4d84">Més...</a><br /></td></tr>
<tr class="separator:a94de76e1aba7602887361768002a4d84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b61062176934651d52a761a3deb517f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a3b61062176934651d52a761a3deb517f">LateUpdate</a> ()</td></tr>
<tr class="memdesc:a3b61062176934651d52a761a3deb517f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called in intervals by UnityEngine, after running the normal game code and physics.  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a3b61062176934651d52a761a3deb517f">Més...</a><br /></td></tr>
<tr class="separator:a3b61062176934651d52a761a3deb517f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1126c69ff84bedfc82289db999e029d1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a1126c69ff84bedfc82289db999e029d1">Dispatch</a> ()</td></tr>
<tr class="memdesc:a1126c69ff84bedfc82289db999e029d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dispatches incoming network messages for PUN.  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a1126c69ff84bedfc82289db999e029d1">Més...</a><br /></td></tr>
<tr class="separator:a1126c69ff84bedfc82289db999e029d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Atributs Protegits</h2></td></tr>
<tr class="memitem:a34d6e954458369b9778a5c7a91349789"><td class="memItemLeft" align="right" valign="top">List&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a34d6e954458369b9778a5c7a91349789">reusableIntList</a> = new List&lt;int&gt;()</td></tr>
<tr class="separator:a34d6e954458369b9778a5c7a91349789"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Atributs Privats</h2></td></tr>
<tr class="memitem:a4bb5dd24655e0d9e1f5493fd1a11b5ee"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a4bb5dd24655e0d9e1f5493fd1a11b5ee">nextSendTickCount</a></td></tr>
<tr class="separator:a4bb5dd24655e0d9e1f5493fd1a11b5ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1de73a7882c78ce226dfbd0ef4187f38"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a1de73a7882c78ce226dfbd0ef4187f38">nextSendTickCountOnSerialize</a></td></tr>
<tr class="separator:a1de73a7882c78ce226dfbd0ef4187f38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9853a35b34e5732fe6fe7482f80dce05"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml">SupportLogger</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a9853a35b34e5732fe6fe7482f80dce05">supportLoggerComponent</a></td></tr>
<tr class="separator:a9853a35b34e5732fe6fe7482f80dce05"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-attribs"></a>
Atributs Privats Estàtics</h2></td></tr>
<tr class="memitem:af0453694e3f67f551a964ca6c7e39c9d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml">PhotonHandler</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#af0453694e3f67f551a964ca6c7e39c9d">instance</a></td></tr>
<tr class="separator:af0453694e3f67f551a964ca6c7e39c9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48af4c7fb5c4f0fbcd5ee414200aaa16"><td class="memItemLeft" align="right" valign="top">const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a48af4c7fb5c4f0fbcd5ee414200aaa16">SerializeRateFrameCorrection</a> = 8</td></tr>
<tr class="memdesc:a48af4c7fb5c4f0fbcd5ee414200aaa16"><td class="mdescLeft">&#160;</td><td class="mdescRight">This corrects the "next time to serialize the state" value by some ms.  <a href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a48af4c7fb5c4f0fbcd5ee414200aaa16">Més...</a><br /></td></tr>
<tr class="separator:a48af4c7fb5c4f0fbcd5ee414200aaa16"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_attribs_class_photon_1_1_realtime_1_1_connection_handler"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_class_photon_1_1_realtime_1_1_connection_handler')"><img src="closed.png" alt="-"/>&#160;Atributs Públics inherited from <a class="el" href="class_photon_1_1_realtime_1_1_connection_handler.xhtml">Photon.Realtime.ConnectionHandler</a></td></tr>
<tr class="memitem:aa8e28a6e11a689c36fcc5a4d38684403 inherit pub_attribs_class_photon_1_1_realtime_1_1_connection_handler"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_connection_handler.xhtml#aa8e28a6e11a689c36fcc5a4d38684403">KeepAliveInBackground</a> = 60000</td></tr>
<tr class="memdesc:aa8e28a6e11a689c36fcc5a4d38684403 inherit pub_attribs_class_photon_1_1_realtime_1_1_connection_handler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines for how long the Fallback Thread should keep the connection, before it may time out as usual.  <a href="class_photon_1_1_realtime_1_1_connection_handler.xhtml#aa8e28a6e11a689c36fcc5a4d38684403">Més...</a><br /></td></tr>
<tr class="separator:aa8e28a6e11a689c36fcc5a4d38684403 inherit pub_attribs_class_photon_1_1_realtime_1_1_connection_handler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header properties_class_photon_1_1_realtime_1_1_connection_handler"><td colspan="2" onclick="javascript:toggleInherit('properties_class_photon_1_1_realtime_1_1_connection_handler')"><img src="closed.png" alt="-"/>&#160;Propietats inherited from <a class="el" href="class_photon_1_1_realtime_1_1_connection_handler.xhtml">Photon.Realtime.ConnectionHandler</a></td></tr>
<tr class="memitem:ab24008a841d2b4771a94a3a0877e61f6 inherit properties_class_photon_1_1_realtime_1_1_connection_handler"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_client.xhtml">LoadBalancingClient</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_connection_handler.xhtml#ab24008a841d2b4771a94a3a0877e61f6">Client</a><code> [get, set]</code></td></tr>
<tr class="memdesc:ab24008a841d2b4771a94a3a0877e61f6 inherit properties_class_photon_1_1_realtime_1_1_connection_handler"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="namespace_photon.xhtml">Photon</a> client to log information and statistics from.  <a href="class_photon_1_1_realtime_1_1_connection_handler.xhtml#ab24008a841d2b4771a94a3a0877e61f6">Més...</a><br /></td></tr>
<tr class="separator:ab24008a841d2b4771a94a3a0877e61f6 inherit properties_class_photon_1_1_realtime_1_1_connection_handler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0048d0d45a2e769f1e32a4b9f995956d inherit properties_class_photon_1_1_realtime_1_1_connection_handler"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_connection_handler.xhtml#a0048d0d45a2e769f1e32a4b9f995956d">CountSendAcksOnly</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a0048d0d45a2e769f1e32a4b9f995956d inherit properties_class_photon_1_1_realtime_1_1_connection_handler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Counts how often the Fallback Thread called SendAcksOnly, which is purely of interest to monitor if the game logic called SendOutgoingCommands as intended.  <a href="class_photon_1_1_realtime_1_1_connection_handler.xhtml#a0048d0d45a2e769f1e32a4b9f995956d">Més...</a><br /></td></tr>
<tr class="separator:a0048d0d45a2e769f1e32a4b9f995956d inherit properties_class_photon_1_1_realtime_1_1_connection_handler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a806206002c15eca1bf4f8395c35a8bcd inherit properties_class_photon_1_1_realtime_1_1_connection_handler"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_connection_handler.xhtml#a806206002c15eca1bf4f8395c35a8bcd">FallbackThreadRunning</a><code> [get]</code></td></tr>
<tr class="separator:a806206002c15eca1bf4f8395c35a8bcd inherit properties_class_photon_1_1_realtime_1_1_connection_handler"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Descripció Detallada</h2>
<div class="textblock"><p>Internal MonoBehaviour that allows <a class="el" href="namespace_photon.xhtml">Photon</a> to run an Update loop. </p>
</div><h2 class="groupheader">Documentació de les Funcions Membre</h2>
<a id="aeb2f23a7c7c298228c28440c159a99f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb2f23a7c7c298228c28440c159a99f3">&#9670;&nbsp;</a></span>Awake()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override void Photon.Pun.PhotonHandler.Awake </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1126c69ff84bedfc82289db999e029d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1126c69ff84bedfc82289db999e029d1">&#9670;&nbsp;</a></span>Dispatch()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Pun.PhotonHandler.Dispatch </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Dispatches incoming network messages for PUN. </p>
<p>Called in FixedUpdate or LateUpdate. </p>
<p>It may make sense to dispatch incoming messages, even if the timeScale is near 0. That can be configured with <a class="el" href="class_photon_1_1_pun_1_1_photon_network.xhtml#a556ed319440663839859373a421ab345" title="Affects if the PhotonHandler dispatches incoming messages in LateUpdate or FixedUpdate (default).">PhotonNetwork.MinimalTimeScaleToDispatchInFixedUpdate</a>.</p>
<p>Without dispatching messages, PUN won't change state and does not handle updates. </p>

</div>
</div>
<a id="a94de76e1aba7602887361768002a4d84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94de76e1aba7602887361768002a4d84">&#9670;&nbsp;</a></span>FixedUpdate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Pun.PhotonHandler.FixedUpdate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called in intervals by UnityEngine. Affected by Time.timeScale. </p>

</div>
</div>
<a id="a3b61062176934651d52a761a3deb517f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b61062176934651d52a761a3deb517f">&#9670;&nbsp;</a></span>LateUpdate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Pun.PhotonHandler.LateUpdate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called in intervals by UnityEngine, after running the normal game code and physics. </p>

</div>
</div>
<a id="a31b95569cd3591c6e75e0108d1b487ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31b95569cd3591c6e75e0108d1b487ec">&#9670;&nbsp;</a></span>OnCreatedRoom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Pun.PhotonHandler.OnCreatedRoom </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when this client created a room and entered it. </p>
<p><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#ac7b3ace36c836fa7769805b6e5adeb5c" title="Called when the LoadBalancingClient entered a room, no matter if this client created it or simply joi...">OnJoinedRoom()</a> will be called as well.</p>
<p>This callback is only called on the client which created a room (see OpCreateRoom).</p>
<p>As any client might close (or drop connection) anytime, there is a chance that the creator of a room does not execute OnCreatedRoom.</p>
<p>If you need specific room properties or a "start signal", implement <a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml#a4e96eaeb9b43f15faf2da080804c7e8c" title="Called after switching to a new MasterClient when the current one leaves.">OnMasterClientSwitched()</a> and make each new MasterClient check the room's state. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml#a3d084f0aa95b2e8f48514695af73b31d">Photon.Realtime.IMatchmakingCallbacks</a>.</p>

</div>
</div>
<a id="a4b2e9850b743eba080cf7ca0353ba70a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b2e9850b743eba080cf7ca0353ba70a">&#9670;&nbsp;</a></span>OnCreateRoomFailed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Pun.PhotonHandler.OnCreateRoomFailed </td>
          <td>(</td>
          <td class="paramtype">short&#160;</td>
          <td class="paramname"><em>returnCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>message</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when the server couldn't create a room (OpCreateRoom failed). </p>
<p>Creating a room may fail for various reasons. Most often, the room already exists (roomname in use) or the RoomOptions clash and it's impossible to create the room.</p>
<p>When creating a room fails on a Game Server: The client will cache the failure internally and returns to the Master Server before it calls the fail-callback. This way, the client is ready to find/create a room at the moment of the callback. In this case, the client skips calling OnConnectedToMaster but returning to the Master Server will still call OnConnected. Treat callbacks of OnConnected as pure information that the client could connect. </p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">returnCode</td><td>Operation ReturnCode from the server.</td></tr>
    <tr><td class="paramname">message</td><td>Debug message for the error.</td></tr>
  </table>
  </dd>
</dl>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml#a099d97fa4d65074adb0db876f47bacd7">Photon.Realtime.IMatchmakingCallbacks</a>.</p>

</div>
</div>
<a id="af42508b4b926c2de0ebe35cdc14a12fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af42508b4b926c2de0ebe35cdc14a12fb">&#9670;&nbsp;</a></span>OnDisable()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override void Photon.Pun.PhotonHandler.OnDisable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab4dd266cc56b759031c2afa60e020628"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4dd266cc56b759031c2afa60e020628">&#9670;&nbsp;</a></span>OnEnable()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Photon.Pun.PhotonHandler.OnEnable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8e8067193d4d754bd75eddb0e8447462"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e8067193d4d754bd75eddb0e8447462">&#9670;&nbsp;</a></span>OnFriendListUpdate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Pun.PhotonHandler.OnFriendListUpdate </td>
          <td>(</td>
          <td class="paramtype">System.Collections.Generic.List&lt; <a class="el" href="class_photon_1_1_realtime_1_1_friend_info.xhtml">FriendInfo</a> &gt;&#160;</td>
          <td class="paramname"><em>friendList</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac7b3ace36c836fa7769805b6e5adeb5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7b3ace36c836fa7769805b6e5adeb5c">&#9670;&nbsp;</a></span>OnJoinedRoom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Pun.PhotonHandler.OnJoinedRoom </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when the LoadBalancingClient entered a room, no matter if this client created it or simply joined. </p>
<p>When this is called, you can access the existing players in <a class="el" href="class_photon_1_1_realtime_1_1_room.xhtml#ad1ed20ddc14c6ec0c9a74aff4eb201fa" title="While inside a Room, this is the list of players who are also in that room.">Room.Players</a>, their custom properties and <a class="el" href="class_photon_1_1_realtime_1_1_room_info.xhtml#a9f8bff52fad7c5ad1d1eb321c97e1fbf" title="Read-only &quot;cache&quot; of custom properties of a room.">Room.CustomProperties</a>.</p>
<p>In this callback, you could create player objects. For example in Unity, instantiate a prefab for the player.</p>
<p>If you want a match to be started "actively", enable the user to signal "ready" (using OpRaiseEvent or a Custom Property). </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml#a8add9e72c38d241a448f4b539acd684b">Photon.Realtime.IMatchmakingCallbacks</a>.</p>

</div>
</div>
<a id="a41719240819fa0448e07dc72aff9765b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41719240819fa0448e07dc72aff9765b">&#9670;&nbsp;</a></span>OnJoinRandomFailed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Pun.PhotonHandler.OnJoinRandomFailed </td>
          <td>(</td>
          <td class="paramtype">short&#160;</td>
          <td class="paramname"><em>returnCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>message</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when a previous OpJoinRandom call failed on the server. </p>
<p>The most common causes are that a room is full or does not exist (due to someone else being faster or closing the room).</p>
<p>This operation is only ever sent to the Master Server. Once a room is found by the Master Server, the client will head off to the designated Game Server and use the operation Join on the Game Server.</p>
<p>When using multiple lobbies (via OpJoinLobby or a TypedLobby parameter), another lobby might have more/fitting rooms.<br  />
 </p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">returnCode</td><td>Operation ReturnCode from the server.</td></tr>
    <tr><td class="paramname">message</td><td>Debug message for the error.</td></tr>
  </table>
  </dd>
</dl>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml#a837e8522439b89e68805a2b2c25fa824">Photon.Realtime.IMatchmakingCallbacks</a>.</p>

</div>
</div>
<a id="a9994103e468b4c42882a5da352eff1d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9994103e468b4c42882a5da352eff1d3">&#9670;&nbsp;</a></span>OnJoinRoomFailed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Pun.PhotonHandler.OnJoinRoomFailed </td>
          <td>(</td>
          <td class="paramtype">short&#160;</td>
          <td class="paramname"><em>returnCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>message</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when a previous OpJoinRoom call failed on the server. </p>
<p>Joining a room may fail for various reasons. Most often, the room is full or does not exist anymore (due to someone else being faster or closing the room).</p>
<p>When joining a room fails on a Game Server: The client will cache the failure internally and returns to the Master Server before it calls the fail-callback. This way, the client is ready to find/create a room at the moment of the callback. In this case, the client skips calling OnConnectedToMaster but returning to the Master Server will still call OnConnected. Treat callbacks of OnConnected as pure information that the client could connect. </p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">returnCode</td><td>Operation ReturnCode from the server.</td></tr>
    <tr><td class="paramname">message</td><td>Debug message for the error.</td></tr>
  </table>
  </dd>
</dl>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml#a55bcc9aca42ebe749a8dcb210ed145e9">Photon.Realtime.IMatchmakingCallbacks</a>.</p>

</div>
</div>
<a id="af0285f9103d26b5294838b96c56d92a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0285f9103d26b5294838b96c56d92a0">&#9670;&nbsp;</a></span>OnLeftRoom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Pun.PhotonHandler.OnLeftRoom </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when the local user/client left a room, so the game's logic can clean up it's internal state. </p>
<p>When leaving a room, the LoadBalancingClient will disconnect the Game Server and connect to the Master Server. This wraps up multiple internal actions.</p>
<p>Wait for the callback OnConnectedToMaster, before you use lobbies and join or create rooms. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks.xhtml#acedd813313ad6724f3935801481d8e8f">Photon.Realtime.IMatchmakingCallbacks</a>.</p>

</div>
</div>
<a id="a4e96eaeb9b43f15faf2da080804c7e8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e96eaeb9b43f15faf2da080804c7e8c">&#9670;&nbsp;</a></span>OnMasterClientSwitched()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Pun.PhotonHandler.OnMasterClientSwitched </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml">Player</a>&#160;</td>
          <td class="paramname"><em>newMasterClient</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called after switching to a new MasterClient when the current one leaves. </p>
<p>This is not called when this client enters a room. The former MasterClient is still in the player list when this method get called. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_in_room_callbacks.xhtml#afc7c0b914b9d0ee3f82e8b8556380876">Photon.Realtime.IInRoomCallbacks</a>.</p>

</div>
</div>
<a id="ab8e15d8d7396635d72829a9773db4d22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8e15d8d7396635d72829a9773db4d22">&#9670;&nbsp;</a></span>OnPlayerEnteredRoom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Pun.PhotonHandler.OnPlayerEnteredRoom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml">Player</a>&#160;</td>
          <td class="paramname"><em>newPlayer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when a remote player entered the room. </p>
<p>This Player is already added to the playerlist.</p>
<p>If your game starts with a certain number of players, this callback can be useful to check the Room.playerCount and find out if you can start. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_in_room_callbacks.xhtml#a0bc282922b4ae18648e68c56085b4f97">Photon.Realtime.IInRoomCallbacks</a>.</p>

</div>
</div>
<a id="a4fd99a38963f7c82ec42034f5108e6a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fd99a38963f7c82ec42034f5108e6a5">&#9670;&nbsp;</a></span>OnPlayerLeftRoom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Pun.PhotonHandler.OnPlayerLeftRoom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml">Player</a>&#160;</td>
          <td class="paramname"><em>otherPlayer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when a remote player left the room or became inactive. </p>
<p>Check otherPlayer.IsInactive.</p>
<p>If another player leaves the room or if the server detects a lost connection, this callback will be used to notify your game logic.</p>
<p>Depending on the room's setup, players may become inactive, which means they may return and retake their spot in the room. In such cases, the Player stays in the <a class="el" href="class_photon_1_1_realtime_1_1_room.xhtml#ad1ed20ddc14c6ec0c9a74aff4eb201fa" title="While inside a Room, this is the list of players who are also in that room.">Room.Players</a> dictionary.</p>
<p>If the player is not just inactive, it gets removed from the <a class="el" href="class_photon_1_1_realtime_1_1_room.xhtml#ad1ed20ddc14c6ec0c9a74aff4eb201fa" title="While inside a Room, this is the list of players who are also in that room.">Room.Players</a> dictionary, before the callback is called. </p>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_in_room_callbacks.xhtml#a778a90ca623c41ffae0f62cc1732a29e">Photon.Realtime.IInRoomCallbacks</a>.</p>

</div>
</div>
<a id="aad736b0da9610c35b6a8e1f3843a3432"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad736b0da9610c35b6a8e1f3843a3432">&#9670;&nbsp;</a></span>OnPlayerPropertiesUpdate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Pun.PhotonHandler.OnPlayerPropertiesUpdate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml">Player</a>&#160;</td>
          <td class="paramname"><em>targetPlayer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_photon_1_1_pun.xhtml#ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</a>&#160;</td>
          <td class="paramname"><em>changedProps</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when custom player-properties are changed. </p>
<p>Player and the changed properties are passed as object[].</p>
<p>Changing properties must be done by <a class="el" href="class_photon_1_1_realtime_1_1_player.xhtml#a73de822cb4ab788e9dce94795566a656" title="Updates and synchronizes this Player&#39;s Custom Properties.">Player.SetCustomProperties</a>, which causes this callback locally, too. </p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">targetPlayer</td><td>Contains Player that changed.</td></tr>
    <tr><td class="paramname">changedProps</td><td>Contains the properties that changed.</td></tr>
  </table>
  </dd>
</dl>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_in_room_callbacks.xhtml#a02ac010a10c47dbdd59ae9a63b970583">Photon.Realtime.IInRoomCallbacks</a>.</p>

</div>
</div>
<a id="ae2151f091273866f9db9231f06f17ba6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2151f091273866f9db9231f06f17ba6">&#9670;&nbsp;</a></span>OnRoomPropertiesUpdate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Pun.PhotonHandler.OnRoomPropertiesUpdate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_photon_1_1_pun.xhtml#ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</a>&#160;</td>
          <td class="paramname"><em>propertiesThatChanged</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when a room's custom properties changed. </p>
<p>The propertiesThatChanged contains all that was set via <a class="el" href="class_photon_1_1_realtime_1_1_room.xhtml#aff6e067d041db92e4fbde6a3277926ad" title="Updates and synchronizes this Room&#39;s Custom Properties.">Room.SetCustomProperties</a>.</p>
<p>Since v1.25 this method has one parameter: Hashtable propertiesThatChanged.<br  />
 Changing properties must be done by <a class="el" href="class_photon_1_1_realtime_1_1_room.xhtml#aff6e067d041db92e4fbde6a3277926ad" title="Updates and synchronizes this Room&#39;s Custom Properties.">Room.SetCustomProperties</a>, which causes this callback locally, too. </p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">propertiesThatChanged</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Implementa <a class="el" href="interface_photon_1_1_realtime_1_1_i_in_room_callbacks.xhtml#aaa3dfde1d96b6b3cba50db6e706af378">Photon.Realtime.IInRoomCallbacks</a>.</p>

</div>
</div>
<a id="af0755cda6a334184f052797f4c639bb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0755cda6a334184f052797f4c639bb8">&#9670;&nbsp;</a></span>Start()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Pun.PhotonHandler.Start </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Documentació de les Dades Membre</h2>
<a id="af0453694e3f67f551a964ca6c7e39c9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0453694e3f67f551a964ca6c7e39c9d">&#9670;&nbsp;</a></span>instance</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml">PhotonHandler</a> Photon.Pun.PhotonHandler.instance</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5491e28e5a2906be4504f5543e404922"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5491e28e5a2906be4504f5543e404922">&#9670;&nbsp;</a></span>MaxDatagrams</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Photon.Pun.PhotonHandler.MaxDatagrams = 3</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Limits the number of datagrams that are created in each LateUpdate. </p>
<p>Helps spreading out sending of messages minimally.</p>

</div>
</div>
<a id="a4bb5dd24655e0d9e1f5493fd1a11b5ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bb5dd24655e0d9e1f5493fd1a11b5ee">&#9670;&nbsp;</a></span>nextSendTickCount</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Photon.Pun.PhotonHandler.nextSendTickCount</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1de73a7882c78ce226dfbd0ef4187f38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1de73a7882c78ce226dfbd0ef4187f38">&#9670;&nbsp;</a></span>nextSendTickCountOnSerialize</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Photon.Pun.PhotonHandler.nextSendTickCountOnSerialize</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a34d6e954458369b9778a5c7a91349789"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34d6e954458369b9778a5c7a91349789">&#9670;&nbsp;</a></span>reusableIntList</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">List&lt;int&gt; Photon.Pun.PhotonHandler.reusableIntList = new List&lt;int&gt;()</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8ea9464eb8e01906b8b6d6bc3a9d8b7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ea9464eb8e01906b8b6d6bc3a9d8b7c">&#9670;&nbsp;</a></span>SendAsap</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Photon.Pun.PhotonHandler.SendAsap</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Signals that outgoing messages should be sent in the next LateUpdate call. </p>
<p>Up to MaxDatagrams are created to send queued messages.</p>

</div>
</div>
<a id="a48af4c7fb5c4f0fbcd5ee414200aaa16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48af4c7fb5c4f0fbcd5ee414200aaa16">&#9670;&nbsp;</a></span>SerializeRateFrameCorrection</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const int Photon.Pun.PhotonHandler.SerializeRateFrameCorrection = 8</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This corrects the "next time to serialize the state" value by some ms. </p>
<p>As LateUpdate typically gets called every 15ms it's better to be early(er) than late to achieve a SerializeRate.</p>

</div>
</div>
<a id="a9853a35b34e5732fe6fe7482f80dce05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9853a35b34e5732fe6fe7482f80dce05">&#9670;&nbsp;</a></span>supportLoggerComponent</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_photon_1_1_realtime_1_1_support_logger.xhtml">SupportLogger</a> Photon.Pun.PhotonHandler.supportLoggerComponent</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>La documentació d'aquesta classe es va generar a partir del següent fitxer:<ul>
<li>F:/Unity Projects/Treball de Fi de Grau/Assets/Photon/PhotonUnityNetworking/Code/<a class="el" href="_photon_handler_8cs.xhtml">PhotonHandler.cs</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_photon.xhtml">Photon</a></li><li class="navelem"><a class="el" href="namespace_photon_1_1_pun.xhtml">Pun</a></li><li class="navelem"><a class="el" href="class_photon_1_1_pun_1_1_photon_handler.xhtml">PhotonHandler</a></li>
    <li class="footer">Generat a Dg Jun 27 2021 02:07:18 per a Treball de Fi de Grau per <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
