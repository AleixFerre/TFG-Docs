<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Treball de Fi de Grau: Referència de la Classe Photon.Realtime.LoadBalancingPeer</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Treball de Fi de Grau
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">Documentació pel treball de final de grau. Implementació d&#39;una base per un joc de gènere MOBA multijugador en línia.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generat per Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Cerca','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Cerca');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Mètodes públics</a> &#124;
<a href="#pro-methods">Mètodes Protegits</a> &#124;
<a href="#pri-methods">Mètodes Privats</a> &#124;
<a href="#pri-attribs">Atributs Privats</a> &#124;
<a href="class_photon_1_1_realtime_1_1_load_balancing_peer-members.xhtml">Llista de tots els membres</a>  </div>
  <div class="headertitle">
<div class="title">Referència de la Classe Photon.Realtime.LoadBalancingPeer</div>  </div>
</div><!--header-->
<div class="contents">

<p>A <a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml" title="A LoadBalancingPeer provides the operations and enum definitions needed to use the LoadBalancing serv...">LoadBalancingPeer</a> provides the operations and enum definitions needed to use the LoadBalancing server application which is also used in <a class="el" href="namespace_photon.xhtml">Photon</a> Cloud.  
 <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#details">Més...</a></p>
<div class="dynheader">
Diagrama d'Herència per a Photon.Realtime.LoadBalancingPeer:</div>
<div class="dyncontent">
 <div class="center">
  <img src="class_photon_1_1_realtime_1_1_load_balancing_peer.png" alt=""/>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Mètodes públics</h2></td></tr>
<tr class="memitem:a7f48b5f0c44ef0c67ef32f147ff87246"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a7f48b5f0c44ef0c67ef32f147ff87246">LoadBalancingPeer</a> (ConnectionProtocol protocolType)</td></tr>
<tr class="memdesc:a7f48b5f0c44ef0c67ef32f147ff87246"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a Peer with specified connection protocol.  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a7f48b5f0c44ef0c67ef32f147ff87246">Més...</a><br /></td></tr>
<tr class="separator:a7f48b5f0c44ef0c67ef32f147ff87246"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6abea91b75c73f78640990fd83c6f8e1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a6abea91b75c73f78640990fd83c6f8e1">LoadBalancingPeer</a> (IPhotonPeerListener listener, ConnectionProtocol protocolType)</td></tr>
<tr class="memdesc:a6abea91b75c73f78640990fd83c6f8e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a Peer with specified connection protocol and a Listener for callbacks.  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a6abea91b75c73f78640990fd83c6f8e1">Més...</a><br /></td></tr>
<tr class="separator:a6abea91b75c73f78640990fd83c6f8e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac21c4ac3367ad68703fb9fd29f1fa063"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#ac21c4ac3367ad68703fb9fd29f1fa063">OpGetRegions</a> (string appId)</td></tr>
<tr class="separator:ac21c4ac3367ad68703fb9fd29f1fa063"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d08eb96624ac46f39fba969784e76b4"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a3d08eb96624ac46f39fba969784e76b4">OpJoinLobby</a> (<a class="el" href="class_photon_1_1_realtime_1_1_typed_lobby.xhtml">TypedLobby</a> lobby=null)</td></tr>
<tr class="memdesc:a3d08eb96624ac46f39fba969784e76b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Joins the lobby on the Master Server, where you get a list of RoomInfos of currently open rooms.  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a3d08eb96624ac46f39fba969784e76b4">Més...</a><br /></td></tr>
<tr class="separator:a3d08eb96624ac46f39fba969784e76b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7132f864b88af2ff8bb3d6221702841"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#af7132f864b88af2ff8bb3d6221702841">OpLeaveLobby</a> ()</td></tr>
<tr class="memdesc:af7132f864b88af2ff8bb3d6221702841"><td class="mdescLeft">&#160;</td><td class="mdescRight">Leaves the lobby on the Master Server.  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#af7132f864b88af2ff8bb3d6221702841">Més...</a><br /></td></tr>
<tr class="separator:af7132f864b88af2ff8bb3d6221702841"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67344084f00dcf86aabce99c2610edae"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a67344084f00dcf86aabce99c2610edae">OpCreateRoom</a> (<a class="el" href="class_photon_1_1_realtime_1_1_enter_room_params.xhtml">EnterRoomParams</a> opParams)</td></tr>
<tr class="memdesc:a67344084f00dcf86aabce99c2610edae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a room (on either Master or Game Server).  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a67344084f00dcf86aabce99c2610edae">Més...</a><br /></td></tr>
<tr class="separator:a67344084f00dcf86aabce99c2610edae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dc6be1075f64edd0b746f2e61c114f5"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a1dc6be1075f64edd0b746f2e61c114f5">OpJoinRoom</a> (<a class="el" href="class_photon_1_1_realtime_1_1_enter_room_params.xhtml">EnterRoomParams</a> opParams)</td></tr>
<tr class="memdesc:a1dc6be1075f64edd0b746f2e61c114f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Joins a room by name or creates new room if room with given name not exists.  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a1dc6be1075f64edd0b746f2e61c114f5">Més...</a><br /></td></tr>
<tr class="separator:a1dc6be1075f64edd0b746f2e61c114f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0b9a197c11005dcc87e07e885239d9b"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#aa0b9a197c11005dcc87e07e885239d9b">OpJoinRandomRoom</a> (<a class="el" href="class_photon_1_1_realtime_1_1_op_join_random_room_params.xhtml">OpJoinRandomRoomParams</a> opJoinRandomRoomParams)</td></tr>
<tr class="memdesc:aa0b9a197c11005dcc87e07e885239d9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Operation to join a random, available room.  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#aa0b9a197c11005dcc87e07e885239d9b">Més...</a><br /></td></tr>
<tr class="separator:aa0b9a197c11005dcc87e07e885239d9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a474dc2086d3d17bce9b4f0ddc2eec95a"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a474dc2086d3d17bce9b4f0ddc2eec95a">OpJoinRandomOrCreateRoom</a> (<a class="el" href="class_photon_1_1_realtime_1_1_op_join_random_room_params.xhtml">OpJoinRandomRoomParams</a> opJoinRandomRoomParams, <a class="el" href="class_photon_1_1_realtime_1_1_enter_room_params.xhtml">EnterRoomParams</a> createRoomParams)</td></tr>
<tr class="memdesc:a474dc2086d3d17bce9b4f0ddc2eec95a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Only used on the Master Server.  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a474dc2086d3d17bce9b4f0ddc2eec95a">Més...</a><br /></td></tr>
<tr class="separator:a474dc2086d3d17bce9b4f0ddc2eec95a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74f970c5eeaef7851411f0b5011bd693"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a74f970c5eeaef7851411f0b5011bd693">OpLeaveRoom</a> (bool becomeInactive, bool sendAuthCookie=false)</td></tr>
<tr class="memdesc:a74f970c5eeaef7851411f0b5011bd693"><td class="mdescLeft">&#160;</td><td class="mdescRight">Leaves a room with option to come back later or "for good".  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a74f970c5eeaef7851411f0b5011bd693">Més...</a><br /></td></tr>
<tr class="separator:a74f970c5eeaef7851411f0b5011bd693"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3db92fd58a230dbc94c068ae38d6a7f0"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a3db92fd58a230dbc94c068ae38d6a7f0">OpGetGameList</a> (<a class="el" href="class_photon_1_1_realtime_1_1_typed_lobby.xhtml">TypedLobby</a> lobby, string queryData)</td></tr>
<tr class="memdesc:a3db92fd58a230dbc94c068ae38d6a7f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a list of games matching a SQL-like where clause.  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a3db92fd58a230dbc94c068ae38d6a7f0">Més...</a><br /></td></tr>
<tr class="separator:a3db92fd58a230dbc94c068ae38d6a7f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b9aebfa506dd7a930d1f0b6d71ba26e"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a2b9aebfa506dd7a930d1f0b6d71ba26e">OpFindFriends</a> (string[] friendsToFind, <a class="el" href="class_photon_1_1_realtime_1_1_find_friends_options.xhtml">FindFriendsOptions</a> options=null)</td></tr>
<tr class="memdesc:a2b9aebfa506dd7a930d1f0b6d71ba26e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Request the rooms and online status for a list of friends (each client must set a unique username via OpAuthenticate).  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a2b9aebfa506dd7a930d1f0b6d71ba26e">Més...</a><br /></td></tr>
<tr class="separator:a2b9aebfa506dd7a930d1f0b6d71ba26e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3b61c42e78a82917bb9093cc99e3a32"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#ad3b61c42e78a82917bb9093cc99e3a32">OpSetCustomPropertiesOfActor</a> (int actorNr, <a class="el" href="_asteroids_game_manager_8cs.xhtml#afa613ef589c02dbd94acc273b62cdcfd">Hashtable</a> actorProperties)</td></tr>
<tr class="separator:ad3b61c42e78a82917bb9093cc99e3a32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ad2f59de68ab42a4882bf0a9ea6595b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a1ad2f59de68ab42a4882bf0a9ea6595b">OpSetCustomPropertiesOfRoom</a> (<a class="el" href="_asteroids_game_manager_8cs.xhtml#afa613ef589c02dbd94acc273b62cdcfd">Hashtable</a> gameProperties)</td></tr>
<tr class="separator:a1ad2f59de68ab42a4882bf0a9ea6595b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ed3ae23ffbc88d5b449997e5af8d9af"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a4ed3ae23ffbc88d5b449997e5af8d9af">OpAuthenticate</a> (string appId, string appVersion, <a class="el" href="class_photon_1_1_realtime_1_1_authentication_values.xhtml">AuthenticationValues</a> authValues, string regionCode, bool getLobbyStatistics)</td></tr>
<tr class="memdesc:a4ed3ae23ffbc88d5b449997e5af8d9af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends this app's appId and appVersion to identify this application server side.  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a4ed3ae23ffbc88d5b449997e5af8d9af">Més...</a><br /></td></tr>
<tr class="separator:a4ed3ae23ffbc88d5b449997e5af8d9af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9c7c615e2c96aec5f0f0462efcfcc6a"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#ad9c7c615e2c96aec5f0f0462efcfcc6a">OpAuthenticateOnce</a> (string appId, string appVersion, <a class="el" href="class_photon_1_1_realtime_1_1_authentication_values.xhtml">AuthenticationValues</a> authValues, string regionCode, <a class="el" href="namespace_photon_1_1_realtime.xhtml#ae1d7dca0c489e7d7970d94c135ff357d">EncryptionMode</a> encryptionMode, ConnectionProtocol expectedProtocol)</td></tr>
<tr class="memdesc:ad9c7c615e2c96aec5f0f0462efcfcc6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends this app's appId and appVersion to identify this application server side.  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#ad9c7c615e2c96aec5f0f0462efcfcc6a">Més...</a><br /></td></tr>
<tr class="separator:ad9c7c615e2c96aec5f0f0462efcfcc6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2238ffb869240c4e9f18d1d32ccb0c20"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a2238ffb869240c4e9f18d1d32ccb0c20">OpChangeGroups</a> (byte[] groupsToRemove, byte[] groupsToAdd)</td></tr>
<tr class="memdesc:a2238ffb869240c4e9f18d1d32ccb0c20"><td class="mdescLeft">&#160;</td><td class="mdescRight">Operation to handle this client's interest groups (for events in room).  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a2238ffb869240c4e9f18d1d32ccb0c20">Més...</a><br /></td></tr>
<tr class="separator:a2238ffb869240c4e9f18d1d32ccb0c20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6d68f09d3f683f8d709c3aa4dfe03cc"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#af6d68f09d3f683f8d709c3aa4dfe03cc">OpRaiseEvent</a> (byte eventCode, object customEventContent, <a class="el" href="class_photon_1_1_realtime_1_1_raise_event_options.xhtml">RaiseEventOptions</a> raiseEventOptions, SendOptions sendOptions)</td></tr>
<tr class="memdesc:af6d68f09d3f683f8d709c3aa4dfe03cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send an event with custom code/type and any content to the other players in the same room.  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#af6d68f09d3f683f8d709c3aa4dfe03cc">Més...</a><br /></td></tr>
<tr class="separator:af6d68f09d3f683f8d709c3aa4dfe03cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a691e7bdd1af18f2bbfaf11118707d152"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a691e7bdd1af18f2bbfaf11118707d152">OpSettings</a> (bool receiveLobbyStats)</td></tr>
<tr class="memdesc:a691e7bdd1af18f2bbfaf11118707d152"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internally used operation to set some "per server" settings.  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a691e7bdd1af18f2bbfaf11118707d152">Més...</a><br /></td></tr>
<tr class="separator:a691e7bdd1af18f2bbfaf11118707d152"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Mètodes Protegits</h2></td></tr>
<tr class="memitem:a8c97f436ca4b81bfb18d4a27e88bf6a3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a8c97f436ca4b81bfb18d4a27e88bf6a3">OpSetPropertyOfRoom</a> (byte propCode, object value)</td></tr>
<tr class="separator:a8c97f436ca4b81bfb18d4a27e88bf6a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Mètodes Privats</h2></td></tr>
<tr class="memitem:affaff7e1fdffe86b25156ffac5e738c9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#affaff7e1fdffe86b25156ffac5e738c9">ConfigUnitySockets</a> ()</td></tr>
<tr class="separator:affaff7e1fdffe86b25156ffac5e738c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ba1675f94fad7ace3f931c73179b117"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a7ba1675f94fad7ace3f931c73179b117">RoomOptionsToOpParameters</a> (Dictionary&lt; byte, object &gt; op, <a class="el" href="class_photon_1_1_realtime_1_1_room_options.xhtml">RoomOptions</a> roomOptions, bool usePropertiesKey=false)</td></tr>
<tr class="memdesc:a7ba1675f94fad7ace3f931c73179b117"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used by OpJoinRoom and by OpCreateRoom alike.  <a href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#a7ba1675f94fad7ace3f931c73179b117">Més...</a><br /></td></tr>
<tr class="separator:a7ba1675f94fad7ace3f931c73179b117"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Atributs Privats</h2></td></tr>
<tr class="memitem:ada8c20c37d2b94d8a8ddd57cd3c15a8e"><td class="memItemLeft" align="right" valign="top">readonly Pool&lt; ParameterDictionary &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml#ada8c20c37d2b94d8a8ddd57cd3c15a8e">paramDictionaryPool</a></td></tr>
<tr class="separator:ada8c20c37d2b94d8a8ddd57cd3c15a8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Descripció Detallada</h2>
<div class="textblock"><p>A <a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml" title="A LoadBalancingPeer provides the operations and enum definitions needed to use the LoadBalancing serv...">LoadBalancingPeer</a> provides the operations and enum definitions needed to use the LoadBalancing server application which is also used in <a class="el" href="namespace_photon.xhtml">Photon</a> Cloud. </p>
<p>This class is internally used. The <a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml" title="A LoadBalancingPeer provides the operations and enum definitions needed to use the LoadBalancing serv...">LoadBalancingPeer</a> does not keep a state, instead this is done by a <a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_client.xhtml" title="This class implements the Photon LoadBalancing workflow by using a LoadBalancingPeer.">LoadBalancingClient</a>. </p>
</div><h2 class="groupheader">Documentació del Constructor i el Destructor</h2>
<a id="a7f48b5f0c44ef0c67ef32f147ff87246"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f48b5f0c44ef0c67ef32f147ff87246">&#9670;&nbsp;</a></span>LoadBalancingPeer() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Photon.Realtime.LoadBalancingPeer.LoadBalancingPeer </td>
          <td>(</td>
          <td class="paramtype">ConnectionProtocol&#160;</td>
          <td class="paramname"><em>protocolType</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a Peer with specified connection protocol. </p>
<p>You need to set the Listener before using the peer.</p>
<p>Each connection protocol has it's own default networking ports for <a class="el" href="namespace_photon.xhtml">Photon</a>.</p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">protocolType</td><td>The preferred option is UDP.</td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6abea91b75c73f78640990fd83c6f8e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6abea91b75c73f78640990fd83c6f8e1">&#9670;&nbsp;</a></span>LoadBalancingPeer() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Photon.Realtime.LoadBalancingPeer.LoadBalancingPeer </td>
          <td>(</td>
          <td class="paramtype">IPhotonPeerListener&#160;</td>
          <td class="paramname"><em>listener</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ConnectionProtocol&#160;</td>
          <td class="paramname"><em>protocolType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a Peer with specified connection protocol and a Listener for callbacks. </p>

</div>
</div>
<h2 class="groupheader">Documentació de les Funcions Membre</h2>
<a id="affaff7e1fdffe86b25156ffac5e738c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affaff7e1fdffe86b25156ffac5e738c9">&#9670;&nbsp;</a></span>ConfigUnitySockets()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.LoadBalancingPeer.ConfigUnitySockets </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4ed3ae23ffbc88d5b449997e5af8d9af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ed3ae23ffbc88d5b449997e5af8d9af">&#9670;&nbsp;</a></span>OpAuthenticate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Photon.Realtime.LoadBalancingPeer.OpAuthenticate </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>appId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>appVersion</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_authentication_values.xhtml">AuthenticationValues</a>&#160;</td>
          <td class="paramname"><em>authValues</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>regionCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>getLobbyStatistics</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sends this app's appId and appVersion to identify this application server side. </p>
<p>This is an async request which triggers a OnOperationResponse() call.</p>
<p>This operation makes use of encryption, if that is established before. See: EstablishEncryption(). Check encryption with IsEncryptionAvailable. This operation is allowed only once per connection (multiple calls will have <a class="el" href="class_photon_1_1_realtime_1_1_error_code.xhtml" title="ErrorCode defines the default codes associated with Photon client/server communication.">ErrorCode</a> != Ok). </p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">appId</td><td>Your application's name or ID to authenticate. This is assigned by <a class="el" href="namespace_photon.xhtml">Photon</a> Cloud (webpage).</td></tr>
    <tr><td class="paramname">appVersion</td><td>The client's version (clients with differing client appVersions are separated and players don't meet).</td></tr>
    <tr><td class="paramname">authValues</td><td>Contains all values relevant for authentication. Even without account system (external Custom Auth), the clients are allowed to identify themselves.</td></tr>
    <tr><td class="paramname">regionCode</td><td>Optional region code, if the client should connect to a specific <a class="el" href="namespace_photon.xhtml">Photon</a> Cloud <a class="el" href="class_photon_1_1_realtime_1_1_region.xhtml">Region</a>.</td></tr>
    <tr><td class="paramname">getLobbyStatistics</td><td>Set to true on Master Server to receive "Lobby Statistics" events.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Retorna</dt><dd>If the operation could be sent (has to be connected).</dd></dl>

</div>
</div>
<a id="ad9c7c615e2c96aec5f0f0462efcfcc6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9c7c615e2c96aec5f0f0462efcfcc6a">&#9670;&nbsp;</a></span>OpAuthenticateOnce()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Photon.Realtime.LoadBalancingPeer.OpAuthenticateOnce </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>appId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>appVersion</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_authentication_values.xhtml">AuthenticationValues</a>&#160;</td>
          <td class="paramname"><em>authValues</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>regionCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_photon_1_1_realtime.xhtml#ae1d7dca0c489e7d7970d94c135ff357d">EncryptionMode</a>&#160;</td>
          <td class="paramname"><em>encryptionMode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ConnectionProtocol&#160;</td>
          <td class="paramname"><em>expectedProtocol</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sends this app's appId and appVersion to identify this application server side. </p>
<p>This is an async request which triggers a OnOperationResponse() call.</p>
<p>This operation makes use of encryption, if that is established before. See: EstablishEncryption(). Check encryption with IsEncryptionAvailable. This operation is allowed only once per connection (multiple calls will have <a class="el" href="class_photon_1_1_realtime_1_1_error_code.xhtml" title="ErrorCode defines the default codes associated with Photon client/server communication.">ErrorCode</a> != Ok). </p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">appId</td><td>Your application's name or ID to authenticate. This is assigned by <a class="el" href="namespace_photon.xhtml">Photon</a> Cloud (webpage).</td></tr>
    <tr><td class="paramname">appVersion</td><td>The client's version (clients with differing client appVersions are separated and players don't meet).</td></tr>
    <tr><td class="paramname">authValues</td><td>Optional authentication values. The client can set no values or a UserId or some parameters for Custom Authentication by a server.</td></tr>
    <tr><td class="paramname">regionCode</td><td>Optional region code, if the client should connect to a specific <a class="el" href="namespace_photon.xhtml">Photon</a> Cloud <a class="el" href="class_photon_1_1_realtime_1_1_region.xhtml">Region</a>.</td></tr>
    <tr><td class="paramname">encryptionMode</td><td></td></tr>
    <tr><td class="paramname">expectedProtocol</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Retorna</dt><dd>If the operation could be sent (has to be connected).</dd></dl>

</div>
</div>
<a id="a2238ffb869240c4e9f18d1d32ccb0c20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2238ffb869240c4e9f18d1d32ccb0c20">&#9670;&nbsp;</a></span>OpChangeGroups()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Photon.Realtime.LoadBalancingPeer.OpChangeGroups </td>
          <td>(</td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>groupsToRemove</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>groupsToAdd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Operation to handle this client's interest groups (for events in room). </p>
<p>Note the difference between passing null and byte[0]: null won't add/remove any groups. byte[0] will add/remove all (existing) groups. First, removing groups is executed. This way, you could leave all groups and join only the ones provided.</p>
<p>Changes become active not immediately but when the server executes this operation (approximately RTT/2). </p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">groupsToRemove</td><td>Groups to remove from interest. Null will not remove any. A byte[0] will remove all.</td></tr>
    <tr><td class="paramname">groupsToAdd</td><td>Groups to add to interest. Null will not add any. A byte[0] will add all current.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Retorna</dt><dd>If operation could be enqueued for sending. Sent when calling: Service or SendOutgoingCommands.</dd></dl>

</div>
</div>
<a id="a67344084f00dcf86aabce99c2610edae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67344084f00dcf86aabce99c2610edae">&#9670;&nbsp;</a></span>OpCreateRoom()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Photon.Realtime.LoadBalancingPeer.OpCreateRoom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_enter_room_params.xhtml">EnterRoomParams</a>&#160;</td>
          <td class="paramname"><em>opParams</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a room (on either Master or Game Server). </p>
<p>The OperationResponse depends on the server the peer is connected to: Master will return a Game Server to connect to. Game Server will return the joined <a class="el" href="class_photon_1_1_realtime_1_1_room.xhtml" title="This class represents a room a client joins/joined.">Room</a>'s data. This is an async request which triggers a OnOperationResponse() call.</p>
<p>If the room is already existing, the OperationResponse will have a returnCode of ErrorCode.GameAlreadyExists. </p>

</div>
</div>
<a id="a2b9aebfa506dd7a930d1f0b6d71ba26e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b9aebfa506dd7a930d1f0b6d71ba26e">&#9670;&nbsp;</a></span>OpFindFriends()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Photon.Realtime.LoadBalancingPeer.OpFindFriends </td>
          <td>(</td>
          <td class="paramtype">string[]&#160;</td>
          <td class="paramname"><em>friendsToFind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_find_friends_options.xhtml">FindFriendsOptions</a>&#160;</td>
          <td class="paramname"><em>options</em> = <code>null</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Request the rooms and online status for a list of friends (each client must set a unique username via OpAuthenticate). </p>
<p>Used on Master Server to find the rooms played by a selected list of users. Users identify themselves by using OpAuthenticate with a unique user ID. The list of user IDs must be fetched from some other source (not provided by <a class="el" href="namespace_photon.xhtml">Photon</a>).</p>
<p>The server response includes 2 arrays of info (each index matching a friend from the request):<br  />
 <a class="el" href="class_photon_1_1_realtime_1_1_parameter_code.xhtml#a76a5bf9059c7f6ae83f70349f9378396" title="(1) Used in Op FindFriends response. Contains bool[] list of online states (false if not online).">ParameterCode.FindFriendsResponseOnlineList</a> = bool[] of online states<br  />
 <a class="el" href="class_photon_1_1_realtime_1_1_parameter_code.xhtml#ae90fbf712ed42c8de99001639b9a87ce" title="(2) Used in Op FindFriends response. Contains string[] of room names (&quot;&quot; where not known or no room j...">ParameterCode.FindFriendsResponseRoomIdList</a> = string[] of room names (empty string if not in a room)<br  />
 <br  />
 The options may be used to define which state a room must match to be returned. </p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">friendsToFind</td><td>Array of friend's names (make sure they are unique).</td></tr>
    <tr><td class="paramname">options</td><td>Options that affect the result of the FindFriends operation.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Retorna</dt><dd>If the operation could be sent (requires connection).</dd></dl>

</div>
</div>
<a id="a3db92fd58a230dbc94c068ae38d6a7f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3db92fd58a230dbc94c068ae38d6a7f0">&#9670;&nbsp;</a></span>OpGetGameList()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Photon.Realtime.LoadBalancingPeer.OpGetGameList </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_typed_lobby.xhtml">TypedLobby</a>&#160;</td>
          <td class="paramname"><em>lobby</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>queryData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a list of games matching a SQL-like where clause. </p>
<p>Operation is only available in lobbies of type SqlLobby. This is an async request which triggers a OnOperationResponse() call. Returned game list is stored in RoomInfoList. </p>
<p>https://doc.photonengine.com/en-us/realtime/current/reference/matchmaking-and-lobby::sql_lobby_type </p><dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">lobby</td><td>The lobby to query. Has to be of type SqlLobby.</td></tr>
    <tr><td class="paramname">queryData</td><td>The sql query statement.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Retorna</dt><dd>If the operation could be sent (has to be connected).</dd></dl>

</div>
</div>
<a id="ac21c4ac3367ad68703fb9fd29f1fa063"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac21c4ac3367ad68703fb9fd29f1fa063">&#9670;&nbsp;</a></span>OpGetRegions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Photon.Realtime.LoadBalancingPeer.OpGetRegions </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>appId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3d08eb96624ac46f39fba969784e76b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d08eb96624ac46f39fba969784e76b4">&#9670;&nbsp;</a></span>OpJoinLobby()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Photon.Realtime.LoadBalancingPeer.OpJoinLobby </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_typed_lobby.xhtml">TypedLobby</a>&#160;</td>
          <td class="paramname"><em>lobby</em> = <code>null</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Joins the lobby on the Master Server, where you get a list of RoomInfos of currently open rooms. </p>
<p>This is an async request which triggers a OnOperationResponse() call.</p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">lobby</td><td>The lobby join to.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Retorna</dt><dd>If the operation could be sent (has to be connected).</dd></dl>

</div>
</div>
<a id="a474dc2086d3d17bce9b4f0ddc2eec95a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a474dc2086d3d17bce9b4f0ddc2eec95a">&#9670;&nbsp;</a></span>OpJoinRandomOrCreateRoom()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Photon.Realtime.LoadBalancingPeer.OpJoinRandomOrCreateRoom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_op_join_random_room_params.xhtml">OpJoinRandomRoomParams</a>&#160;</td>
          <td class="paramname"><em>opJoinRandomRoomParams</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_enter_room_params.xhtml">EnterRoomParams</a>&#160;</td>
          <td class="paramname"><em>createRoomParams</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Only used on the Master Server. </p>
<p>It will assign a game server and room to join-or-create. On the Game Server, the OpJoin is used with option "create if not exists".</p>

</div>
</div>
<a id="aa0b9a197c11005dcc87e07e885239d9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0b9a197c11005dcc87e07e885239d9b">&#9670;&nbsp;</a></span>OpJoinRandomRoom()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Photon.Realtime.LoadBalancingPeer.OpJoinRandomRoom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_op_join_random_room_params.xhtml">OpJoinRandomRoomParams</a>&#160;</td>
          <td class="paramname"><em>opJoinRandomRoomParams</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Operation to join a random, available room. </p>
<p>Overloads take additional player properties. This is an async request which triggers a OnOperationResponse() call. If all rooms are closed or full, the OperationResponse will have a returnCode of <a class="el" href="class_photon_1_1_realtime_1_1_error_code.xhtml#a570678324c9cbd7b1531fa8ac519f48c" title="(32760) Random matchmaking only succeeds if a room exists thats neither closed nor full....">ErrorCode.NoRandomMatchFound</a>. If successful, the OperationResponse contains a gameserver address and the name of some room.</p>
<dl class="section return"><dt>Retorna</dt><dd>If the operation could be sent currently (requires connection).</dd></dl>

</div>
</div>
<a id="a1dc6be1075f64edd0b746f2e61c114f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1dc6be1075f64edd0b746f2e61c114f5">&#9670;&nbsp;</a></span>OpJoinRoom()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Photon.Realtime.LoadBalancingPeer.OpJoinRoom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_enter_room_params.xhtml">EnterRoomParams</a>&#160;</td>
          <td class="paramname"><em>opParams</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Joins a room by name or creates new room if room with given name not exists. </p>
<p>The OperationResponse depends on the server the peer is connected to: Master will return a Game Server to connect to. Game Server will return the joined <a class="el" href="class_photon_1_1_realtime_1_1_room.xhtml" title="This class represents a room a client joins/joined.">Room</a>'s data. This is an async request which triggers a OnOperationResponse() call.</p>
<p>If the room is not existing (anymore), the OperationResponse will have a returnCode of <a class="el" href="class_photon_1_1_realtime_1_1_error_code.xhtml#a959ba0e3a6b195e5c2d7ccbca3d8f39a" title="(32758) Join can fail if the room (name) is not existing (anymore). This can happen when players leav...">ErrorCode.GameDoesNotExist</a>. Other possible ErrorCodes are: GameClosed, GameFull. </p>
<dl class="section return"><dt>Retorna</dt><dd>If the operation could be sent (requires connection).</dd></dl>

</div>
</div>
<a id="af7132f864b88af2ff8bb3d6221702841"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7132f864b88af2ff8bb3d6221702841">&#9670;&nbsp;</a></span>OpLeaveLobby()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Photon.Realtime.LoadBalancingPeer.OpLeaveLobby </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Leaves the lobby on the Master Server. </p>
<p>This is an async request which triggers a OnOperationResponse() call.</p>
<dl class="section return"><dt>Retorna</dt><dd>If the operation could be sent (requires connection).</dd></dl>

</div>
</div>
<a id="a74f970c5eeaef7851411f0b5011bd693"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74f970c5eeaef7851411f0b5011bd693">&#9670;&nbsp;</a></span>OpLeaveRoom()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Photon.Realtime.LoadBalancingPeer.OpLeaveRoom </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>becomeInactive</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>sendAuthCookie</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Leaves a room with option to come back later or "for good". </p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">becomeInactive</td><td>Async games can be re-joined (loaded) later on. Set to false, if you want to abandon a game entirely.</td></tr>
    <tr><td class="paramname">sendAuthCookie</td><td>WebFlag: Securely transmit the encrypted object AuthCookie to the web service in PathLeave webhook when available</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Retorna</dt><dd>If the opteration can be send currently.</dd></dl>

</div>
</div>
<a id="af6d68f09d3f683f8d709c3aa4dfe03cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6d68f09d3f683f8d709c3aa4dfe03cc">&#9670;&nbsp;</a></span>OpRaiseEvent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Photon.Realtime.LoadBalancingPeer.OpRaiseEvent </td>
          <td>(</td>
          <td class="paramtype">byte&#160;</td>
          <td class="paramname"><em>eventCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">object&#160;</td>
          <td class="paramname"><em>customEventContent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_raise_event_options.xhtml">RaiseEventOptions</a>&#160;</td>
          <td class="paramname"><em>raiseEventOptions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SendOptions&#160;</td>
          <td class="paramname"><em>sendOptions</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Send an event with custom code/type and any content to the other players in the same room. </p>
<p>This override explicitly uses another parameter order to not mix it up with the implementation for Hashtable only.</p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">eventCode</td><td>Identifies this type of event (and the content). Your game's event codes can start with 0.</td></tr>
    <tr><td class="paramname">customEventContent</td><td>Any serializable datatype (including Hashtable like the other OpRaiseEvent overloads).</td></tr>
    <tr><td class="paramname">raiseEventOptions</td><td>Contains (slightly) less often used options. If you pass null, the default options will be used.</td></tr>
    <tr><td class="paramname">sendOptions</td><td>Send options for reliable, encryption etc</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Retorna</dt><dd>If operation could be enqueued for sending. Sent when calling: Service or SendOutgoingCommands.</dd></dl>

</div>
</div>
<a id="ad3b61c42e78a82917bb9093cc99e3a32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3b61c42e78a82917bb9093cc99e3a32">&#9670;&nbsp;</a></span>OpSetCustomPropertiesOfActor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Photon.Realtime.LoadBalancingPeer.OpSetCustomPropertiesOfActor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>actorNr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_asteroids_game_manager_8cs.xhtml#afa613ef589c02dbd94acc273b62cdcfd">Hashtable</a>&#160;</td>
          <td class="paramname"><em>actorProperties</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1ad2f59de68ab42a4882bf0a9ea6595b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ad2f59de68ab42a4882bf0a9ea6595b">&#9670;&nbsp;</a></span>OpSetCustomPropertiesOfRoom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Photon.Realtime.LoadBalancingPeer.OpSetCustomPropertiesOfRoom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_asteroids_game_manager_8cs.xhtml#afa613ef589c02dbd94acc273b62cdcfd">Hashtable</a>&#160;</td>
          <td class="paramname"><em>gameProperties</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8c97f436ca4b81bfb18d4a27e88bf6a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c97f436ca4b81bfb18d4a27e88bf6a3">&#9670;&nbsp;</a></span>OpSetPropertyOfRoom()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Photon.Realtime.LoadBalancingPeer.OpSetPropertyOfRoom </td>
          <td>(</td>
          <td class="paramtype">byte&#160;</td>
          <td class="paramname"><em>propCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">object&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a691e7bdd1af18f2bbfaf11118707d152"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a691e7bdd1af18f2bbfaf11118707d152">&#9670;&nbsp;</a></span>OpSettings()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Photon.Realtime.LoadBalancingPeer.OpSettings </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>receiveLobbyStats</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Internally used operation to set some "per server" settings. </p>
<p>This is for the Master Server.</p>
<dl class="params"><dt>Paràmetres</dt><dd>
  <table class="params">
    <tr><td class="paramname">receiveLobbyStats</td><td>Set to true, to get <a class="el" href="class_lobby.xhtml">Lobby</a> Statistics (lists of existing lobbies).</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Retorna</dt><dd>False if the operation could not be sent.</dd></dl>

</div>
</div>
<a id="a7ba1675f94fad7ace3f931c73179b117"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ba1675f94fad7ace3f931c73179b117">&#9670;&nbsp;</a></span>RoomOptionsToOpParameters()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Photon.Realtime.LoadBalancingPeer.RoomOptionsToOpParameters </td>
          <td>(</td>
          <td class="paramtype">Dictionary&lt; byte, object &gt;&#160;</td>
          <td class="paramname"><em>op</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_photon_1_1_realtime_1_1_room_options.xhtml">RoomOptions</a>&#160;</td>
          <td class="paramname"><em>roomOptions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>usePropertiesKey</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Used by OpJoinRoom and by OpCreateRoom alike. </p>

</div>
</div>
<h2 class="groupheader">Documentació de les Dades Membre</h2>
<a id="ada8c20c37d2b94d8a8ddd57cd3c15a8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada8c20c37d2b94d8a8ddd57cd3c15a8e">&#9670;&nbsp;</a></span>paramDictionaryPool</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">readonly Pool&lt;ParameterDictionary&gt; Photon.Realtime.LoadBalancingPeer.paramDictionaryPool</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Valor inicial:</b><div class="fragment"><div class="line">= <span class="keyword">new</span> Pool&lt;ParameterDictionary&gt;(</div>
<div class="line">            () =&gt; <span class="keyword">new</span> ParameterDictionary(),</div>
<div class="line">            x =&gt; x.Clear(),</div>
<div class="line">            1)</div>
</div><!-- fragment -->
</div>
</div>
<hr/>La documentació d'aquesta classe es va generar a partir del següent fitxer:<ul>
<li>F:/Unity Projects/Treball de Fi de Grau/Assets/Photon/PhotonRealtime/Code/<a class="el" href="_loadbalancing_peer_8cs.xhtml">LoadbalancingPeer.cs</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_photon.xhtml">Photon</a></li><li class="navelem"><a class="el" href="namespace_photon_1_1_realtime.xhtml">Realtime</a></li><li class="navelem"><a class="el" href="class_photon_1_1_realtime_1_1_load_balancing_peer.xhtml">LoadBalancingPeer</a></li>
    <li class="footer">Generat a Dg Jun 27 2021 02:00:11 per a Treball de Fi de Grau per <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
